/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/applications/": {
    /** @description API endpoint that allows applications to be viewed or edited. */
    get: operations["applications_list"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    post: operations["applications_create"];
  };
  "/applications/{id}/": {
    /** @description API endpoint that allows applications to be viewed or edited. */
    get: operations["applications_retrieve"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    put: operations["applications_update"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    delete: operations["applications_destroy"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    patch: operations["applications_partial_update"];
  };
  "/attendees/": {
    /** @description API endpoint that allows users to be viewed or edited. */
    get: operations["attendees_list"];
    /** @description API endpoint that allows users to be viewed or edited. */
    post: operations["attendees_create"];
  };
  "/attendees/{id}/": {
    /** @description API endpoint that allows users to be viewed or edited. */
    get: operations["attendees_retrieve"];
    /** @description API endpoint that allows users to be viewed or edited. */
    put: operations["attendees_update"];
    /** @description API endpoint that allows users to be viewed or edited. */
    delete: operations["attendees_destroy"];
    /** @description API endpoint that allows users to be viewed or edited. */
    patch: operations["attendees_partial_update"];
  };
  "/auth/schema/": {
    /**
     * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     * - YAML: application/vnd.oai.openapi
     * - JSON: application/vnd.oai.openapi+json
     */
    get: operations["auth_schema_retrieve"];
  };
  "/auth/token/": {
    /**
     * @description Takes a set of user credentials and returns an access and refresh JSON web
     * token pair to prove the authentication of those credentials.
     */
    post: operations["auth_token_create"];
  };
  "/auth/token/refresh/": {
    /**
     * @description Takes a refresh type JSON web token and returns an access type JSON web
     * token if the refresh token is valid.
     */
    post: operations["auth_token_refresh_create"];
  };
  "/auth/token/verify/": {
    /**
     * @description Takes a token and indicates if it is valid.  This view provides no
     * information about a token's fitness for a particular use.
     */
    post: operations["auth_token_verify_create"];
  };
  "/groups/": {
    /** @description API endpoint that allows groups to be viewed or edited. */
    get: operations["groups_list"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    post: operations["groups_create"];
  };
  "/groups/{id}/": {
    /** @description API endpoint that allows groups to be viewed or edited. */
    get: operations["groups_retrieve"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    put: operations["groups_update"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    delete: operations["groups_destroy"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    patch: operations["groups_partial_update"];
  };
  "/hardware/": {
    /** @description API endpoint that allows hardware to be viewed or edited. */
    get: operations["hardware_list"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    post: operations["hardware_create"];
  };
  "/hardware/{id}/": {
    /** @description API endpoint that allows hardware to be viewed or edited. */
    get: operations["hardware_retrieve"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    put: operations["hardware_update"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    delete: operations["hardware_destroy"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    patch: operations["hardware_partial_update"];
  };
  "/hardwaredevicehistory/": {
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    get: operations["hardwaredevicehistory_list"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    post: operations["hardwaredevicehistory_create"];
  };
  "/hardwaredevicehistory/{history_id}/": {
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    get: operations["hardwaredevicehistory_retrieve"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    put: operations["hardwaredevicehistory_update"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    delete: operations["hardwaredevicehistory_destroy"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    patch: operations["hardwaredevicehistory_partial_update"];
  };
  "/hardwaredevices/": {
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    get: operations["hardwaredevices_list"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    post: operations["hardwaredevices_create"];
  };
  "/hardwaredevices/{id}/": {
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    get: operations["hardwaredevices_retrieve"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    put: operations["hardwaredevices_update"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    delete: operations["hardwaredevices_destroy"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    patch: operations["hardwaredevices_partial_update"];
  };
  "/helpdesks/": {
    /** @description API endpoint that allows Reality Kits to be viewed or edited. */
    get: operations["helpdesks_retrieve"];
    /** @description API endpoint that allows Reality Kits to be viewed or edited. */
    post: operations["helpdesks_create"];
  };
  "/helpdesks/{id}/": {
    /** @description API endpoint that allows Reality Kits to be viewed or edited. */
    get: operations["helpdesks_retrieve_2"];
  };
  "/locations/": {
    /** @description API endpoint that allows locations to be viewed or edited. */
    get: operations["locations_list"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    post: operations["locations_create"];
  };
  "/locations/{id}/": {
    /** @description API endpoint that allows locations to be viewed or edited. */
    get: operations["locations_retrieve"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    put: operations["locations_update"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    delete: operations["locations_destroy"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    patch: operations["locations_partial_update"];
  };
  "/projects/": {
    /** @description API endpoint that allows projects to be viewed or edited. */
    get: operations["projects_list"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    post: operations["projects_create"];
  };
  "/projects/{id}/": {
    /** @description API endpoint that allows projects to be viewed or edited. */
    get: operations["projects_retrieve"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    put: operations["projects_update"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    delete: operations["projects_destroy"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    patch: operations["projects_partial_update"];
  };
  "/request_mentor/": {
    /** @description API endpoint that allows Mentor Requests to be viewed or edited. */
    get: operations["request_mentor_retrieve"];
    /** @description API endpoint that allows Mentor Requests to be viewed or edited. */
    post: operations["request_mentor_create"];
  };
  "/schema/spectacular": {
    /**
     * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     * - YAML: application/vnd.oai.openapi
     * - JSON: application/vnd.oai.openapi+json
     */
    get: operations["schema_spectacular_retrieve"];
  };
  "/skillproficiencies/": {
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    get: operations["skillproficiencies_list"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    post: operations["skillproficiencies_create"];
  };
  "/skillproficiencies/{id}/": {
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    get: operations["skillproficiencies_retrieve"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    put: operations["skillproficiencies_update"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    delete: operations["skillproficiencies_destroy"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    patch: operations["skillproficiencies_partial_update"];
  };
  "/skills/": {
    /** @description API endpoint that allows skills to be viewed or edited. */
    get: operations["skills_list"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    post: operations["skills_create"];
  };
  "/skills/{id}/": {
    /** @description API endpoint that allows skills to be viewed or edited. */
    get: operations["skills_retrieve"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    put: operations["skills_update"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    delete: operations["skills_destroy"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    patch: operations["skills_partial_update"];
  };
  "/tables/": {
    /** @description API endpoint that allows tables to be viewed or edited. */
    get: operations["tables_list"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    post: operations["tables_create"];
  };
  "/tables/{id}/": {
    /** @description API endpoint that allows tables to be viewed or edited. */
    get: operations["tables_retrieve"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    put: operations["tables_update"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    delete: operations["tables_destroy"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    patch: operations["tables_partial_update"];
  };
  "/teams/": {
    /** @description API endpoint that allows teams to be viewed or edited. */
    get: operations["teams_list"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    post: operations["teams_create"];
  };
  "/teams/{id}/": {
    /** @description API endpoint that allows teams to be viewed or edited. */
    get: operations["teams_retrieve"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    put: operations["teams_update"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    delete: operations["teams_destroy"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    patch: operations["teams_partial_update"];
  };
  "/uploaded_files/": {
    /** @description API endpoint that allows files to be viewed or edited. */
    get: operations["uploaded_files_list"];
    /** @description API endpoint that allows files to be viewed or edited. */
    post: operations["uploaded_files_create"];
  };
  "/uploaded_files/{id}/": {
    /** @description API endpoint that allows files to be viewed or edited. */
    get: operations["uploaded_files_retrieve"];
    /** @description API endpoint that allows files to be viewed or edited. */
    put: operations["uploaded_files_update"];
    /** @description API endpoint that allows files to be viewed or edited. */
    delete: operations["uploaded_files_destroy"];
    /** @description API endpoint that allows files to be viewed or edited. */
    patch: operations["uploaded_files_partial_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @description * `A` - 17 or younger
     * * `B` - 18 to 20
     * * `C` - 21 to 29
     * * `D` - 30 to 39
     * * `E` - 40 to 49
     * * `F` - 50 to 59
     * * `G` - 60 or older
     * * `H` - I prefer not to say
     * @enum {string}
     */
    AgeGroupEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H";
    Application: {
      /** Format: uuid */
      id: string;
      gender_identity: components["schemas"]["GenderIdentityEnum"][];
      race_ethnic_group: components["schemas"]["RaceEthnicGroupEnum"][];
      disabilities: components["schemas"]["DisabilitiesEnum"][];
      previous_participation: components["schemas"]["PreviousParticipationEnum"][];
      first_name: string;
      middle_name?: string | null;
      last_name: string;
      current_country: string;
      current_city: string;
      pronouns?: string | null;
      age_group?: components["schemas"]["AgeGroupEnum"];
      bio?: string;
      /** Format: email */
      email: string;
      event_year?: number;
      /** Format: uri */
      portfolio: string;
      /** Format: uri */
      resume: string;
      city: string;
      country: string;
      nationality: string;
      disability_identity?: components["schemas"]["DisabilityIdentityEnum"];
      disability_accommodations?: string | null;
      participation_capacity?: components["schemas"]["ParticipationCapacityEnum"];
      student_school?: string | null;
      student_field_of_study?: string | null;
      occupation?: string | null;
      employer?: string | null;
      status?: components["schemas"]["StatusEnum"] | components["schemas"]["NullEnum"] | null;
      previously_participated?: boolean;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      experience_with_xr?: boolean;
      theme_essay?: string | null;
      theme_essay_follow_up?: string | null;
      heard_about_us?: components["schemas"]["HeardAboutUsEnum"] | components["schemas"]["NullEnum"] | null;
      shirt_size?: components["schemas"]["ShirtSizeEnum"] | components["schemas"]["NullEnum"] | null;
      communications_platform_username?: string | null;
      dietary_restrictions?: string | null;
      additional_accommodations?: string | null;
      phone_number_country_alpha_2_options?: components["schemas"]["PhoneNumberCountryAlpha2OptionsEnum"] | components["schemas"]["NullEnum"] | null;
      phone_number: string;
      emergency_contact_name: string;
      emergency_contact_phone_number: string;
      /** Format: email */
      emergency_contact_email: string;
      emergency_contact_relationship: string;
      us_visa_support_is_required: boolean;
      us_visa_support_full_name?: string | null;
      us_visa_support_passport_number?: string | null;
      us_visa_support_national_identification_document_information?: string | null;
      us_visa_support_citizenship?: components["schemas"]["UsVisaSupportCitizenshipEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_address_line_1?: string | null;
      us_visa_support_address_line_2?: string | null;
      /** Format: date-time */
      submitted_at: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: uuid */
      parental_consent_form?: string | null;
      /** Format: uuid */
      media_release?: string | null;
      /** Format: uuid */
      liability_release?: string | null;
    };
    Attendee: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
      /** @description The groups this user belongs to. A user will get all permissions granted to each of their groups. */
      groups?: number[];
      /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username: string;
      /** Format: email */
      email: string;
      /**
       * Staff status
       * @description Designates whether the user can log into this admin site.
       */
      is_staff?: boolean;
      /** Format: uuid */
      application?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `A` - Hearing difficulty - Deaf or having serious difficulty hearing (DEAR).
     * * `B` - Vision difficulty - Blind or having serious difficulty seeing, even when wearing glasses (DEYE).
     * * `C` - Cognitive difficulty - Because of a physical, mental, or emotional problem, having difficulty remembering, concentrating, or making decisions (DREM).
     * * `D` - Ambulatory difficulty - Having serious difficulty walking or climbing stairs (DPHY).
     * * `E` - Self-care difficulty - Having difficulty bathing or dressing (DDRS).
     * * `F` - Independent living difficulty - Because of a physical, mental, or emotional problem, having difficulty doing errands alone such as visiting a doctor's office or shopping (DOUT).
     * * `G` - I prefer not to say
     * @enum {string}
     */
    DisabilitiesEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G";
    /**
     * @description * `A` - Yes
     * * `B` - No
     * * `C` - I prefer not to say
     * @enum {string}
     */
    DisabilityIdentityEnum: "A" | "B" | "C";
    FileUpload: {
      /** Format: uuid */
      id: string;
      /** Format: uri */
      file: string;
      claimed?: boolean;
      /** Format: date-time */
      created_at: string;
    };
    /**
     * @description * `A` - Cisgender female
     * * `B` - Cisgender male
     * * `C` - Transgender female
     * * `D` - Transgender male
     * * `E` - Gender non-conforming, non-binary, or gender queer
     * * `F` - Two-spirit
     * * `G` - Other
     * * `H` - I prefer not to say
     * @enum {string}
     */
    GenderIdentityEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H";
    GroupDetail: {
      id: number;
      name: string;
      permissions?: number[];
    };
    Hardware: {
      /** Format: uuid */
      id: string;
      name: string;
      description?: string;
      /** Format: uri */
      image: string;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareDevice: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware: string;
      serial: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareDeviceDetail: {
      /** Format: uuid */
      id: string;
      hardware: components["schemas"]["HardwareDeviceHardware"];
      serial: string;
      checked_out_to: components["schemas"]["Attendee"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareDeviceHardware: {
      /** Format: uuid */
      id: string;
      name: string;
    };
    HardwareDeviceHistory: {
      history_id: number;
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware?: string | null;
      serial: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `F` - A friend
     * * `V` - A Reality Hack organizer or volunteer
     * * `N` - A teacher or someone in my professional network
     * * `S` - Social media
     * * `C` - Campus poster or ad
     * * `P` - I participated in the MIT XR Hackathon before
     * * `O` - Other
     * @enum {string}
     */
    HeardAboutUsEnum: "F" | "V" | "N" | "S" | "C" | "P" | "O";
    Location: {
      /** Format: uuid */
      id: string;
      building: string;
      room?: components["schemas"]["RoomEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /** @enum {unknown} */
    NullEnum: "";
    /**
     * @description * `S` - Student
     * * `P` - Professional
     * * `H` - Hobbyist
     * @enum {string}
     */
    ParticipationCapacityEnum: "S" | "P" | "H";
    /**
     * @description * `A` - Designer
     * * `D` - Developer
     * * `S` - Specialist
     * @enum {string}
     */
    ParticipationRoleEnum: "A" | "D" | "S";
    PatchedApplication: {
      /** Format: uuid */
      id?: string;
      gender_identity?: components["schemas"]["GenderIdentityEnum"][];
      race_ethnic_group?: components["schemas"]["RaceEthnicGroupEnum"][];
      disabilities?: components["schemas"]["DisabilitiesEnum"][];
      previous_participation?: components["schemas"]["PreviousParticipationEnum"][];
      first_name?: string;
      middle_name?: string | null;
      last_name?: string;
      current_country?: string;
      current_city?: string;
      pronouns?: string | null;
      age_group?: components["schemas"]["AgeGroupEnum"];
      bio?: string;
      /** Format: email */
      email?: string;
      event_year?: number;
      /** Format: uri */
      portfolio?: string;
      /** Format: uri */
      resume?: string;
      city?: string;
      country?: string;
      nationality?: string;
      disability_identity?: components["schemas"]["DisabilityIdentityEnum"];
      disability_accommodations?: string | null;
      participation_capacity?: components["schemas"]["ParticipationCapacityEnum"];
      student_school?: string | null;
      student_field_of_study?: string | null;
      occupation?: string | null;
      employer?: string | null;
      status?: components["schemas"]["StatusEnum"] | components["schemas"]["NullEnum"] | null;
      previously_participated?: boolean;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      experience_with_xr?: boolean;
      theme_essay?: string | null;
      theme_essay_follow_up?: string | null;
      heard_about_us?: components["schemas"]["HeardAboutUsEnum"] | components["schemas"]["NullEnum"] | null;
      shirt_size?: components["schemas"]["ShirtSizeEnum"] | components["schemas"]["NullEnum"] | null;
      communications_platform_username?: string | null;
      dietary_restrictions?: string | null;
      additional_accommodations?: string | null;
      phone_number_country_alpha_2_options?: components["schemas"]["PhoneNumberCountryAlpha2OptionsEnum"] | components["schemas"]["NullEnum"] | null;
      phone_number?: string;
      emergency_contact_name?: string;
      emergency_contact_phone_number?: string;
      /** Format: email */
      emergency_contact_email?: string;
      emergency_contact_relationship?: string;
      us_visa_support_is_required?: boolean;
      us_visa_support_full_name?: string | null;
      us_visa_support_passport_number?: string | null;
      us_visa_support_national_identification_document_information?: string | null;
      us_visa_support_citizenship?: components["schemas"]["UsVisaSupportCitizenshipEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_address_line_1?: string | null;
      us_visa_support_address_line_2?: string | null;
      /** Format: date-time */
      submitted_at?: string;
      /** Format: date-time */
      updated_at?: string;
      /** Format: uuid */
      parental_consent_form?: string | null;
      /** Format: uuid */
      media_release?: string | null;
      /** Format: uuid */
      liability_release?: string | null;
    };
    PatchedAttendee: {
      /** Format: uuid */
      id?: string;
      first_name?: string;
      last_name?: string;
      /** @description The groups this user belongs to. A user will get all permissions granted to each of their groups. */
      groups?: number[];
      /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username?: string;
      /** Format: email */
      email?: string;
      /**
       * Staff status
       * @description Designates whether the user can log into this admin site.
       */
      is_staff?: boolean;
      /** Format: uuid */
      application?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedFileUpload: {
      /** Format: uuid */
      id?: string;
      /** Format: uri */
      file?: string;
      claimed?: boolean;
      /** Format: date-time */
      created_at?: string;
    };
    PatchedGroupDetail: {
      id?: number;
      name?: string;
      permissions?: number[];
    };
    PatchedHardware: {
      /** Format: uuid */
      id?: string;
      name?: string;
      description?: string;
      /** Format: uri */
      image?: string;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedHardwareDevice: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      hardware?: string;
      serial?: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedHardwareDeviceHistory: {
      history_id?: number;
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      hardware?: string | null;
      serial?: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedLocation: {
      /** Format: uuid */
      id?: string;
      building?: string;
      room?: components["schemas"]["RoomEnum"];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedProject: {
      /** Format: uuid */
      id?: string;
      name?: string;
      /** Format: uri */
      repository_location?: string;
      /** Format: uri */
      submission_location?: string;
      /** Format: uuid */
      team?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedSkill: {
      /** Format: uuid */
      id?: string;
      name?: string;
    };
    PatchedSkillProficiencyCreate: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      skill?: string;
      proficiency?: components["schemas"]["ProficiencyEnum"];
      /** Format: uuid */
      attendee?: string | null;
      /** Format: uuid */
      application?: string | null;
    };
    PatchedTable: {
      /** Format: uuid */
      id?: string;
      /** Format: int64 */
      number?: number;
      /** Format: uuid */
      location?: string;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedTeam: {
      /** Format: uuid */
      id?: string;
      name?: string;
      attendees?: string[];
      /** Format: uuid */
      table?: string;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    /**
     * @description * `AW` - Aruba
     * * `AF` - Afghanistan
     * * `AO` - Angola
     * * `AI` - Anguilla
     * * `AX` - Åland Islands
     * * `AL` - Albania
     * * `AD` - Andorra
     * * `AE` - United Arab Emirates
     * * `AR` - Argentina
     * * `AM` - Armenia
     * * `AS` - American Samoa
     * * `AQ` - Antarctica
     * * `TF` - French Southern Territories
     * * `AG` - Antigua and Barbuda
     * * `AU` - Australia
     * * `AT` - Austria
     * * `AZ` - Azerbaijan
     * * `BI` - Burundi
     * * `BE` - Belgium
     * * `BJ` - Benin
     * * `BQ` - Bonaire, Sint Eustatius and Saba
     * * `BF` - Burkina Faso
     * * `BD` - Bangladesh
     * * `BG` - Bulgaria
     * * `BH` - Bahrain
     * * `BS` - Bahamas
     * * `BA` - Bosnia and Herzegovina
     * * `BL` - Saint Barthélemy
     * * `BY` - Belarus
     * * `BZ` - Belize
     * * `BM` - Bermuda
     * * `BO` - Bolivia, Plurinational State of
     * * `BR` - Brazil
     * * `BB` - Barbados
     * * `BN` - Brunei Darussalam
     * * `BT` - Bhutan
     * * `BV` - Bouvet Island
     * * `BW` - Botswana
     * * `CF` - Central African Republic
     * * `CA` - Canada
     * * `CC` - Cocos (Keeling) Islands
     * * `CH` - Switzerland
     * * `CL` - Chile
     * * `CN` - China
     * * `CI` - Côte d'Ivoire
     * * `CM` - Cameroon
     * * `CD` - Congo, The Democratic Republic of the
     * * `CG` - Congo
     * * `CK` - Cook Islands
     * * `CO` - Colombia
     * * `KM` - Comoros
     * * `CV` - Cabo Verde
     * * `CR` - Costa Rica
     * * `CU` - Cuba
     * * `CW` - Curaçao
     * * `CX` - Christmas Island
     * * `KY` - Cayman Islands
     * * `CY` - Cyprus
     * * `CZ` - Czechia
     * * `DE` - Germany
     * * `DJ` - Djibouti
     * * `DM` - Dominica
     * * `DK` - Denmark
     * * `DO` - Dominican Republic
     * * `DZ` - Algeria
     * * `EC` - Ecuador
     * * `EG` - Egypt
     * * `ER` - Eritrea
     * * `EH` - Western Sahara
     * * `ES` - Spain
     * * `EE` - Estonia
     * * `ET` - Ethiopia
     * * `FI` - Finland
     * * `FJ` - Fiji
     * * `FK` - Falkland Islands (Malvinas)
     * * `FR` - France
     * * `FO` - Faroe Islands
     * * `FM` - Micronesia, Federated States of
     * * `GA` - Gabon
     * * `GB` - United Kingdom
     * * `GE` - Georgia
     * * `GG` - Guernsey
     * * `GH` - Ghana
     * * `GI` - Gibraltar
     * * `GN` - Guinea
     * * `GP` - Guadeloupe
     * * `GM` - Gambia
     * * `GW` - Guinea-Bissau
     * * `GQ` - Equatorial Guinea
     * * `GR` - Greece
     * * `GD` - Grenada
     * * `GL` - Greenland
     * * `GT` - Guatemala
     * * `GF` - French Guiana
     * * `GU` - Guam
     * * `GY` - Guyana
     * * `HK` - Hong Kong
     * * `HM` - Heard Island and McDonald Islands
     * * `HN` - Honduras
     * * `HR` - Croatia
     * * `HT` - Haiti
     * * `HU` - Hungary
     * * `ID` - Indonesia
     * * `IM` - Isle of Man
     * * `IN` - India
     * * `IO` - British Indian Ocean Territory
     * * `IE` - Ireland
     * * `IR` - Iran, Islamic Republic of
     * * `IQ` - Iraq
     * * `IS` - Iceland
     * * `IL` - Israel
     * * `IT` - Italy
     * * `JM` - Jamaica
     * * `JE` - Jersey
     * * `JO` - Jordan
     * * `JP` - Japan
     * * `KZ` - Kazakhstan
     * * `KE` - Kenya
     * * `KG` - Kyrgyzstan
     * * `KH` - Cambodia
     * * `KI` - Kiribati
     * * `KN` - Saint Kitts and Nevis
     * * `KR` - Korea, Republic of
     * * `KW` - Kuwait
     * * `LA` - Lao People's Democratic Republic
     * * `LB` - Lebanon
     * * `LR` - Liberia
     * * `LY` - Libya
     * * `LC` - Saint Lucia
     * * `LI` - Liechtenstein
     * * `LK` - Sri Lanka
     * * `LS` - Lesotho
     * * `LT` - Lithuania
     * * `LU` - Luxembourg
     * * `LV` - Latvia
     * * `MO` - Macao
     * * `MF` - Saint Martin (French part)
     * * `MA` - Morocco
     * * `MC` - Monaco
     * * `MD` - Moldova, Republic of
     * * `MG` - Madagascar
     * * `MV` - Maldives
     * * `MX` - Mexico
     * * `MH` - Marshall Islands
     * * `MK` - North Macedonia
     * * `ML` - Mali
     * * `MT` - Malta
     * * `MM` - Myanmar
     * * `ME` - Montenegro
     * * `MN` - Mongolia
     * * `MP` - Northern Mariana Islands
     * * `MZ` - Mozambique
     * * `MR` - Mauritania
     * * `MS` - Montserrat
     * * `MQ` - Martinique
     * * `MU` - Mauritius
     * * `MW` - Malawi
     * * `MY` - Malaysia
     * * `YT` - Mayotte
     * * `NA` - Namibia
     * * `NC` - New Caledonia
     * * `NE` - Niger
     * * `NF` - Norfolk Island
     * * `NG` - Nigeria
     * * `NI` - Nicaragua
     * * `NU` - Niue
     * * `NL` - Netherlands
     * * `NO` - Norway
     * * `NP` - Nepal
     * * `NR` - Nauru
     * * `NZ` - New Zealand
     * * `OM` - Oman
     * * `PK` - Pakistan
     * * `PA` - Panama
     * * `PN` - Pitcairn
     * * `PE` - Peru
     * * `PH` - Philippines
     * * `PW` - Palau
     * * `PG` - Papua New Guinea
     * * `PL` - Poland
     * * `PR` - Puerto Rico
     * * `KP` - Korea, Democratic People's Republic of
     * * `PT` - Portugal
     * * `PY` - Paraguay
     * * `PS` - Palestine, State of
     * * `PF` - French Polynesia
     * * `QA` - Qatar
     * * `RE` - Réunion
     * * `RO` - Romania
     * * `RU` - Russian Federation
     * * `RW` - Rwanda
     * * `SA` - Saudi Arabia
     * * `SD` - Sudan
     * * `SN` - Senegal
     * * `SG` - Singapore
     * * `GS` - South Georgia and the South Sandwich Islands
     * * `SH` - Saint Helena, Ascension and Tristan da Cunha
     * * `SJ` - Svalbard and Jan Mayen
     * * `SB` - Solomon Islands
     * * `SL` - Sierra Leone
     * * `SV` - El Salvador
     * * `SM` - San Marino
     * * `SO` - Somalia
     * * `PM` - Saint Pierre and Miquelon
     * * `RS` - Serbia
     * * `SS` - South Sudan
     * * `ST` - Sao Tome and Principe
     * * `SR` - Suriname
     * * `SK` - Slovakia
     * * `SI` - Slovenia
     * * `SE` - Sweden
     * * `SZ` - Eswatini
     * * `SX` - Sint Maarten (Dutch part)
     * * `SC` - Seychelles
     * * `SY` - Syrian Arab Republic
     * * `TC` - Turks and Caicos Islands
     * * `TD` - Chad
     * * `TG` - Togo
     * * `TH` - Thailand
     * * `TJ` - Tajikistan
     * * `TK` - Tokelau
     * * `TM` - Turkmenistan
     * * `TL` - Timor-Leste
     * * `TO` - Tonga
     * * `TT` - Trinidad and Tobago
     * * `TN` - Tunisia
     * * `TR` - Turkey
     * * `TV` - Tuvalu
     * * `TW` - Taiwan, Province of China
     * * `TZ` - Tanzania, United Republic of
     * * `UG` - Uganda
     * * `UA` - Ukraine
     * * `UM` - United States Minor Outlying Islands
     * * `UY` - Uruguay
     * * `US` - United States
     * * `UZ` - Uzbekistan
     * * `VA` - Holy See (Vatican City State)
     * * `VC` - Saint Vincent and the Grenadines
     * * `VE` - Venezuela, Bolivarian Republic of
     * * `VG` - Virgin Islands, British
     * * `VI` - Virgin Islands, U.S.
     * * `VN` - Viet Nam
     * * `VU` - Vanuatu
     * * `WF` - Wallis and Futuna
     * * `WS` - Samoa
     * * `YE` - Yemen
     * * `ZA` - South Africa
     * * `ZM` - Zambia
     * * `ZW` - Zimbabwe
     * @enum {string}
     */
    PhoneNumberCountryAlpha2OptionsEnum: "AW" | "AF" | "AO" | "AI" | "AX" | "AL" | "AD" | "AE" | "AR" | "AM" | "AS" | "AQ" | "TF" | "AG" | "AU" | "AT" | "AZ" | "BI" | "BE" | "BJ" | "BQ" | "BF" | "BD" | "BG" | "BH" | "BS" | "BA" | "BL" | "BY" | "BZ" | "BM" | "BO" | "BR" | "BB" | "BN" | "BT" | "BV" | "BW" | "CF" | "CA" | "CC" | "CH" | "CL" | "CN" | "CI" | "CM" | "CD" | "CG" | "CK" | "CO" | "KM" | "CV" | "CR" | "CU" | "CW" | "CX" | "KY" | "CY" | "CZ" | "DE" | "DJ" | "DM" | "DK" | "DO" | "DZ" | "EC" | "EG" | "ER" | "EH" | "ES" | "EE" | "ET" | "FI" | "FJ" | "FK" | "FR" | "FO" | "FM" | "GA" | "GB" | "GE" | "GG" | "GH" | "GI" | "GN" | "GP" | "GM" | "GW" | "GQ" | "GR" | "GD" | "GL" | "GT" | "GF" | "GU" | "GY" | "HK" | "HM" | "HN" | "HR" | "HT" | "HU" | "ID" | "IM" | "IN" | "IO" | "IE" | "IR" | "IQ" | "IS" | "IL" | "IT" | "JM" | "JE" | "JO" | "JP" | "KZ" | "KE" | "KG" | "KH" | "KI" | "KN" | "KR" | "KW" | "LA" | "LB" | "LR" | "LY" | "LC" | "LI" | "LK" | "LS" | "LT" | "LU" | "LV" | "MO" | "MF" | "MA" | "MC" | "MD" | "MG" | "MV" | "MX" | "MH" | "MK" | "ML" | "MT" | "MM" | "ME" | "MN" | "MP" | "MZ" | "MR" | "MS" | "MQ" | "MU" | "MW" | "MY" | "YT" | "NA" | "NC" | "NE" | "NF" | "NG" | "NI" | "NU" | "NL" | "NO" | "NP" | "NR" | "NZ" | "OM" | "PK" | "PA" | "PN" | "PE" | "PH" | "PW" | "PG" | "PL" | "PR" | "KP" | "PT" | "PY" | "PS" | "PF" | "QA" | "RE" | "RO" | "RU" | "RW" | "SA" | "SD" | "SN" | "SG" | "GS" | "SH" | "SJ" | "SB" | "SL" | "SV" | "SM" | "SO" | "PM" | "RS" | "SS" | "ST" | "SR" | "SK" | "SI" | "SE" | "SZ" | "SX" | "SC" | "SY" | "TC" | "TD" | "TG" | "TH" | "TJ" | "TK" | "TM" | "TL" | "TO" | "TT" | "TN" | "TR" | "TV" | "TW" | "TZ" | "UG" | "UA" | "UM" | "UY" | "US" | "UZ" | "VA" | "VC" | "VE" | "VG" | "VI" | "VN" | "VU" | "WF" | "WS" | "YE" | "ZA" | "ZM" | "ZW";
    /**
     * @description * `A` - 2016
     * * `B` - 2017
     * * `C` - 2018
     * * `D` - 2019
     * * `E` - 2020
     * * `F` - 2022
     * * `G` - 2023
     * @enum {string}
     */
    PreviousParticipationEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G";
    /**
     * @description * `N` - Novice
     * * `C` - Competent
     * * `P` - Proficient
     * * `M` - Master
     * @enum {string}
     */
    ProficiencyEnum: "N" | "C" | "P" | "M";
    Project: {
      /** Format: uuid */
      id: string;
      name: string;
      /** Format: uri */
      repository_location: string;
      /** Format: uri */
      submission_location: string;
      /** Format: uuid */
      team?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `A` - Asian, Asian American, or of Asian descent
     * * `B` - Black, African American, or of African descent
     * * `C` - Hispanic, Latino, Latina, Latinx, or of Latinx or Spanish-speaking descent
     * * `D` - Middle Eastern, North African, or of North African descent
     * * `E` - Native American, American Indian, Alaska Native, or Indigenous
     * * `F` - Pacific Islander or Native Hawaiian
     * * `G` - White or of European descent
     * * `H` - Multi-racial or multi-ethnic
     * * `I` - Other
     * * `J` - I prefer not to say
     * @enum {string}
     */
    RaceEthnicGroupEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J";
    /**
     * @description * `MH` - Main Hall
     * * `AT` - Atlantis
     * @enum {string}
     */
    RoomEnum: "MH" | "AT";
    /**
     * @description * `1` - XS
     * * `2` - S
     * * `3` - M
     * * `4` - L
     * * `5` - XL
     * * `6` - XXL
     * @enum {string}
     */
    ShirtSizeEnum: "1" | "2" | "3" | "4" | "5" | "6";
    Skill: {
      /** Format: uuid */
      id: string;
      name: string;
    };
    SkillProficiency: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      skill: string;
      proficiency?: components["schemas"]["ProficiencyEnum"];
      /** Format: uuid */
      attendee: string | null;
      /** Format: uuid */
      application?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    SkillProficiencyCreate: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      skill: string;
      proficiency?: components["schemas"]["ProficiencyEnum"];
      /** Format: uuid */
      attendee: string | null;
      /** Format: uuid */
      application?: string | null;
    };
    SkillProficiencyDetail: {
      /** Format: uuid */
      id: string;
      skill: components["schemas"]["Skill"];
      proficiency?: components["schemas"]["ProficiencyEnum"];
      attendee: components["schemas"]["Attendee"];
      /** Format: uuid */
      application?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `AI` - Accepted, In-Person
     * * `AO` - Accepted, Online
     * * `WI` - Wait-list, In-Person
     * * `WO` - Wait-list, Online
     * * `D` - Declined
     * @enum {string}
     */
    StatusEnum: "AI" | "AO" | "WI" | "WO" | "D";
    Table: {
      /** Format: uuid */
      id: string;
      /** Format: int64 */
      number: number;
      /** Format: uuid */
      location: string;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    TableCreate: {
      /** Format: uuid */
      id: string;
      /** Format: int64 */
      number: number;
      /** Format: uuid */
      location: string;
    };
    Team: {
      /** Format: uuid */
      id: string;
      name: string;
      attendees: string[];
      /** Format: uuid */
      table: string;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    TeamCreate: {
      /** Format: uuid */
      id: string;
      name: string;
      attendees: string[];
      /** Format: uuid */
      table: string;
    };
    TokenObtainPair: {
      username: string;
      password: string;
      access: string;
      refresh: string;
    };
    TokenRefresh: {
      access: string;
      refresh: string;
    };
    TokenVerify: {
      token: string;
    };
    /**
     * @description * `AW` - Aruba
     * * `AF` - Afghanistan
     * * `AO` - Angola
     * * `AI` - Anguilla
     * * `AX` - Åland Islands
     * * `AL` - Albania
     * * `AD` - Andorra
     * * `AE` - United Arab Emirates
     * * `AR` - Argentina
     * * `AM` - Armenia
     * * `AS` - American Samoa
     * * `AQ` - Antarctica
     * * `TF` - French Southern Territories
     * * `AG` - Antigua and Barbuda
     * * `AU` - Australia
     * * `AT` - Austria
     * * `AZ` - Azerbaijan
     * * `BI` - Burundi
     * * `BE` - Belgium
     * * `BJ` - Benin
     * * `BQ` - Bonaire, Sint Eustatius and Saba
     * * `BF` - Burkina Faso
     * * `BD` - Bangladesh
     * * `BG` - Bulgaria
     * * `BH` - Bahrain
     * * `BS` - Bahamas
     * * `BA` - Bosnia and Herzegovina
     * * `BL` - Saint Barthélemy
     * * `BY` - Belarus
     * * `BZ` - Belize
     * * `BM` - Bermuda
     * * `BO` - Bolivia, Plurinational State of
     * * `BR` - Brazil
     * * `BB` - Barbados
     * * `BN` - Brunei Darussalam
     * * `BT` - Bhutan
     * * `BV` - Bouvet Island
     * * `BW` - Botswana
     * * `CF` - Central African Republic
     * * `CA` - Canada
     * * `CC` - Cocos (Keeling) Islands
     * * `CH` - Switzerland
     * * `CL` - Chile
     * * `CN` - China
     * * `CI` - Côte d'Ivoire
     * * `CM` - Cameroon
     * * `CD` - Congo, The Democratic Republic of the
     * * `CG` - Congo
     * * `CK` - Cook Islands
     * * `CO` - Colombia
     * * `KM` - Comoros
     * * `CV` - Cabo Verde
     * * `CR` - Costa Rica
     * * `CU` - Cuba
     * * `CW` - Curaçao
     * * `CX` - Christmas Island
     * * `KY` - Cayman Islands
     * * `CY` - Cyprus
     * * `CZ` - Czechia
     * * `DE` - Germany
     * * `DJ` - Djibouti
     * * `DM` - Dominica
     * * `DK` - Denmark
     * * `DO` - Dominican Republic
     * * `DZ` - Algeria
     * * `EC` - Ecuador
     * * `EG` - Egypt
     * * `ER` - Eritrea
     * * `EH` - Western Sahara
     * * `ES` - Spain
     * * `EE` - Estonia
     * * `ET` - Ethiopia
     * * `FI` - Finland
     * * `FJ` - Fiji
     * * `FK` - Falkland Islands (Malvinas)
     * * `FR` - France
     * * `FO` - Faroe Islands
     * * `FM` - Micronesia, Federated States of
     * * `GA` - Gabon
     * * `GB` - United Kingdom
     * * `GE` - Georgia
     * * `GG` - Guernsey
     * * `GH` - Ghana
     * * `GI` - Gibraltar
     * * `GN` - Guinea
     * * `GP` - Guadeloupe
     * * `GM` - Gambia
     * * `GW` - Guinea-Bissau
     * * `GQ` - Equatorial Guinea
     * * `GR` - Greece
     * * `GD` - Grenada
     * * `GL` - Greenland
     * * `GT` - Guatemala
     * * `GF` - French Guiana
     * * `GU` - Guam
     * * `GY` - Guyana
     * * `HK` - Hong Kong
     * * `HM` - Heard Island and McDonald Islands
     * * `HN` - Honduras
     * * `HR` - Croatia
     * * `HT` - Haiti
     * * `HU` - Hungary
     * * `ID` - Indonesia
     * * `IM` - Isle of Man
     * * `IN` - India
     * * `IO` - British Indian Ocean Territory
     * * `IE` - Ireland
     * * `IR` - Iran, Islamic Republic of
     * * `IQ` - Iraq
     * * `IS` - Iceland
     * * `IL` - Israel
     * * `IT` - Italy
     * * `JM` - Jamaica
     * * `JE` - Jersey
     * * `JO` - Jordan
     * * `JP` - Japan
     * * `KZ` - Kazakhstan
     * * `KE` - Kenya
     * * `KG` - Kyrgyzstan
     * * `KH` - Cambodia
     * * `KI` - Kiribati
     * * `KN` - Saint Kitts and Nevis
     * * `KR` - Korea, Republic of
     * * `KW` - Kuwait
     * * `LA` - Lao People's Democratic Republic
     * * `LB` - Lebanon
     * * `LR` - Liberia
     * * `LY` - Libya
     * * `LC` - Saint Lucia
     * * `LI` - Liechtenstein
     * * `LK` - Sri Lanka
     * * `LS` - Lesotho
     * * `LT` - Lithuania
     * * `LU` - Luxembourg
     * * `LV` - Latvia
     * * `MO` - Macao
     * * `MF` - Saint Martin (French part)
     * * `MA` - Morocco
     * * `MC` - Monaco
     * * `MD` - Moldova, Republic of
     * * `MG` - Madagascar
     * * `MV` - Maldives
     * * `MX` - Mexico
     * * `MH` - Marshall Islands
     * * `MK` - North Macedonia
     * * `ML` - Mali
     * * `MT` - Malta
     * * `MM` - Myanmar
     * * `ME` - Montenegro
     * * `MN` - Mongolia
     * * `MP` - Northern Mariana Islands
     * * `MZ` - Mozambique
     * * `MR` - Mauritania
     * * `MS` - Montserrat
     * * `MQ` - Martinique
     * * `MU` - Mauritius
     * * `MW` - Malawi
     * * `MY` - Malaysia
     * * `YT` - Mayotte
     * * `NA` - Namibia
     * * `NC` - New Caledonia
     * * `NE` - Niger
     * * `NF` - Norfolk Island
     * * `NG` - Nigeria
     * * `NI` - Nicaragua
     * * `NU` - Niue
     * * `NL` - Netherlands
     * * `NO` - Norway
     * * `NP` - Nepal
     * * `NR` - Nauru
     * * `NZ` - New Zealand
     * * `OM` - Oman
     * * `PK` - Pakistan
     * * `PA` - Panama
     * * `PN` - Pitcairn
     * * `PE` - Peru
     * * `PH` - Philippines
     * * `PW` - Palau
     * * `PG` - Papua New Guinea
     * * `PL` - Poland
     * * `PR` - Puerto Rico
     * * `KP` - Korea, Democratic People's Republic of
     * * `PT` - Portugal
     * * `PY` - Paraguay
     * * `PS` - Palestine, State of
     * * `PF` - French Polynesia
     * * `QA` - Qatar
     * * `RE` - Réunion
     * * `RO` - Romania
     * * `RU` - Russian Federation
     * * `RW` - Rwanda
     * * `SA` - Saudi Arabia
     * * `SD` - Sudan
     * * `SN` - Senegal
     * * `SG` - Singapore
     * * `GS` - South Georgia and the South Sandwich Islands
     * * `SH` - Saint Helena, Ascension and Tristan da Cunha
     * * `SJ` - Svalbard and Jan Mayen
     * * `SB` - Solomon Islands
     * * `SL` - Sierra Leone
     * * `SV` - El Salvador
     * * `SM` - San Marino
     * * `SO` - Somalia
     * * `PM` - Saint Pierre and Miquelon
     * * `RS` - Serbia
     * * `SS` - South Sudan
     * * `ST` - Sao Tome and Principe
     * * `SR` - Suriname
     * * `SK` - Slovakia
     * * `SI` - Slovenia
     * * `SE` - Sweden
     * * `SZ` - Eswatini
     * * `SX` - Sint Maarten (Dutch part)
     * * `SC` - Seychelles
     * * `SY` - Syrian Arab Republic
     * * `TC` - Turks and Caicos Islands
     * * `TD` - Chad
     * * `TG` - Togo
     * * `TH` - Thailand
     * * `TJ` - Tajikistan
     * * `TK` - Tokelau
     * * `TM` - Turkmenistan
     * * `TL` - Timor-Leste
     * * `TO` - Tonga
     * * `TT` - Trinidad and Tobago
     * * `TN` - Tunisia
     * * `TR` - Turkey
     * * `TV` - Tuvalu
     * * `TW` - Taiwan, Province of China
     * * `TZ` - Tanzania, United Republic of
     * * `UG` - Uganda
     * * `UA` - Ukraine
     * * `UM` - United States Minor Outlying Islands
     * * `UY` - Uruguay
     * * `US` - United States
     * * `UZ` - Uzbekistan
     * * `VA` - Holy See (Vatican City State)
     * * `VC` - Saint Vincent and the Grenadines
     * * `VE` - Venezuela, Bolivarian Republic of
     * * `VG` - Virgin Islands, British
     * * `VI` - Virgin Islands, U.S.
     * * `VN` - Viet Nam
     * * `VU` - Vanuatu
     * * `WF` - Wallis and Futuna
     * * `WS` - Samoa
     * * `YE` - Yemen
     * * `ZA` - South Africa
     * * `ZM` - Zambia
     * * `ZW` - Zimbabwe
     * @enum {string}
     */
    UsVisaSupportCitizenshipEnum: "AW" | "AF" | "AO" | "AI" | "AX" | "AL" | "AD" | "AE" | "AR" | "AM" | "AS" | "AQ" | "TF" | "AG" | "AU" | "AT" | "AZ" | "BI" | "BE" | "BJ" | "BQ" | "BF" | "BD" | "BG" | "BH" | "BS" | "BA" | "BL" | "BY" | "BZ" | "BM" | "BO" | "BR" | "BB" | "BN" | "BT" | "BV" | "BW" | "CF" | "CA" | "CC" | "CH" | "CL" | "CN" | "CI" | "CM" | "CD" | "CG" | "CK" | "CO" | "KM" | "CV" | "CR" | "CU" | "CW" | "CX" | "KY" | "CY" | "CZ" | "DE" | "DJ" | "DM" | "DK" | "DO" | "DZ" | "EC" | "EG" | "ER" | "EH" | "ES" | "EE" | "ET" | "FI" | "FJ" | "FK" | "FR" | "FO" | "FM" | "GA" | "GB" | "GE" | "GG" | "GH" | "GI" | "GN" | "GP" | "GM" | "GW" | "GQ" | "GR" | "GD" | "GL" | "GT" | "GF" | "GU" | "GY" | "HK" | "HM" | "HN" | "HR" | "HT" | "HU" | "ID" | "IM" | "IN" | "IO" | "IE" | "IR" | "IQ" | "IS" | "IL" | "IT" | "JM" | "JE" | "JO" | "JP" | "KZ" | "KE" | "KG" | "KH" | "KI" | "KN" | "KR" | "KW" | "LA" | "LB" | "LR" | "LY" | "LC" | "LI" | "LK" | "LS" | "LT" | "LU" | "LV" | "MO" | "MF" | "MA" | "MC" | "MD" | "MG" | "MV" | "MX" | "MH" | "MK" | "ML" | "MT" | "MM" | "ME" | "MN" | "MP" | "MZ" | "MR" | "MS" | "MQ" | "MU" | "MW" | "MY" | "YT" | "NA" | "NC" | "NE" | "NF" | "NG" | "NI" | "NU" | "NL" | "NO" | "NP" | "NR" | "NZ" | "OM" | "PK" | "PA" | "PN" | "PE" | "PH" | "PW" | "PG" | "PL" | "PR" | "KP" | "PT" | "PY" | "PS" | "PF" | "QA" | "RE" | "RO" | "RU" | "RW" | "SA" | "SD" | "SN" | "SG" | "GS" | "SH" | "SJ" | "SB" | "SL" | "SV" | "SM" | "SO" | "PM" | "RS" | "SS" | "ST" | "SR" | "SK" | "SI" | "SE" | "SZ" | "SX" | "SC" | "SY" | "TC" | "TD" | "TG" | "TH" | "TJ" | "TK" | "TM" | "TL" | "TO" | "TT" | "TN" | "TR" | "TV" | "TW" | "TZ" | "UG" | "UA" | "UM" | "UY" | "US" | "UZ" | "VA" | "VC" | "VE" | "VG" | "VI" | "VN" | "VU" | "WF" | "WS" | "YE" | "ZA" | "ZM" | "ZW";
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_list: {
    parameters: {
      query?: {
        email?: string;
        experience_with_xr?: boolean;
        /**
         * @description * `S` - Student
         * * `P` - Professional
         * * `H` - Hobbyist
         */
        participation_capacity?: "H" | "P" | "S";
        /**
         * @description * `A` - Designer
         * * `D` - Developer
         * * `S` - Specialist
         */
        participation_role?: "A" | "D" | "S" | null;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"][];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Application"];
        "application/x-www-form-urlencoded": components["schemas"]["Application"];
        "multipart/form-data": components["schemas"]["Application"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Application"];
        "application/x-www-form-urlencoded": components["schemas"]["Application"];
        "multipart/form-data": components["schemas"]["Application"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedApplication"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedApplication"];
        "multipart/form-data": components["schemas"]["PatchedApplication"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_list: {
    parameters: {
      query?: {
        email?: string;
        first_name?: string;
        groups?: number[];
        is_staff?: boolean;
        last_name?: string;
        /** @description A search term. */
        search?: string;
        username?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendee"][];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Attendee"];
        "application/x-www-form-urlencoded": components["schemas"]["Attendee"];
        "multipart/form-data": components["schemas"]["Attendee"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Attendee"];
        "application/x-www-form-urlencoded": components["schemas"]["Attendee"];
        "multipart/form-data": components["schemas"]["Attendee"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAttendee"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAttendee"];
        "multipart/form-data": components["schemas"]["PatchedAttendee"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /**
   * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
   *
   * - YAML: application/vnd.oai.openapi
   * - JSON: application/vnd.oai.openapi+json
   */
  auth_schema_retrieve: {
    parameters: {
      query?: {
        format?: "json" | "yaml";
        lang?: "af" | "ar" | "ar-dz" | "ast" | "az" | "be" | "bg" | "bn" | "br" | "bs" | "ca" | "ckb" | "cs" | "cy" | "da" | "de" | "dsb" | "el" | "en" | "en-au" | "en-gb" | "eo" | "es" | "es-ar" | "es-co" | "es-mx" | "es-ni" | "es-ve" | "et" | "eu" | "fa" | "fi" | "fr" | "fy" | "ga" | "gd" | "gl" | "he" | "hi" | "hr" | "hsb" | "hu" | "hy" | "ia" | "id" | "ig" | "io" | "is" | "it" | "ja" | "ka" | "kab" | "kk" | "km" | "kn" | "ko" | "ky" | "lb" | "lt" | "lv" | "mk" | "ml" | "mn" | "mr" | "ms" | "my" | "nb" | "ne" | "nl" | "nn" | "os" | "pa" | "pl" | "pt" | "pt-br" | "ro" | "ru" | "sk" | "sl" | "sq" | "sr" | "sr-latn" | "sv" | "sw" | "ta" | "te" | "tg" | "th" | "tk" | "tr" | "tt" | "udm" | "uk" | "ur" | "uz" | "vi" | "zh-hans" | "zh-hant";
      };
    };
    responses: {
      200: {
        content: {
          "application/vnd.oai.openapi": {
            [key: string]: unknown;
          };
          "application/yaml": {
            [key: string]: unknown;
          };
          "application/vnd.oai.openapi+json": {
            [key: string]: unknown;
          };
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  /**
   * @description Takes a set of user credentials and returns an access and refresh JSON web
   * token pair to prove the authentication of those credentials.
   */
  auth_token_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenObtainPair"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenObtainPair"];
        "multipart/form-data": components["schemas"]["TokenObtainPair"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenObtainPair"];
        };
      };
    };
  };
  /**
   * @description Takes a refresh type JSON web token and returns an access type JSON web
   * token if the refresh token is valid.
   */
  auth_token_refresh_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenRefresh"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenRefresh"];
        "multipart/form-data": components["schemas"]["TokenRefresh"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenRefresh"];
        };
      };
    };
  };
  /**
   * @description Takes a token and indicates if it is valid.  This view provides no
   * information about a token's fitness for a particular use.
   */
  auth_token_verify_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenVerify"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenVerify"];
        "multipart/form-data": components["schemas"]["TokenVerify"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenVerify"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"][];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupDetail"];
        "application/x-www-form-urlencoded": components["schemas"]["GroupDetail"];
        "multipart/form-data": components["schemas"]["GroupDetail"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupDetail"];
        "application/x-www-form-urlencoded": components["schemas"]["GroupDetail"];
        "multipart/form-data": components["schemas"]["GroupDetail"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedGroupDetail"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedGroupDetail"];
        "multipart/form-data": components["schemas"]["PatchedGroupDetail"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Hardware"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Hardware"];
        "application/x-www-form-urlencoded": components["schemas"]["Hardware"];
        "multipart/form-data": components["schemas"]["Hardware"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Hardware"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Hardware"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Hardware"];
        "application/x-www-form-urlencoded": components["schemas"]["Hardware"];
        "multipart/form-data": components["schemas"]["Hardware"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Hardware"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardware"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardware"];
        "multipart/form-data": components["schemas"]["PatchedHardware"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Hardware"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_list: {
    parameters: {
      query?: {
        checked_out_to?: string;
        hardware?: string;
        /** @description A search term. */
        search?: string;
        serial?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDeviceHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDeviceHistory"];
        "multipart/form-data": components["schemas"]["HardwareDeviceHistory"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDeviceHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDeviceHistory"];
        "multipart/form-data": components["schemas"]["HardwareDeviceHistory"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardwareDeviceHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardwareDeviceHistory"];
        "multipart/form-data": components["schemas"]["PatchedHardwareDeviceHistory"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_list: {
    parameters: {
      query?: {
        checked_out_to?: string;
        hardware?: string;
        /** @description A search term. */
        search?: string;
        serial?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDevice"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDevice"];
        "multipart/form-data": components["schemas"]["HardwareDevice"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDevice"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDevice"];
        "multipart/form-data": components["schemas"]["HardwareDevice"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardwareDevice"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardwareDevice"];
        "multipart/form-data": components["schemas"]["PatchedHardwareDevice"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"];
        };
      };
    };
  };
  /** @description API endpoint that allows Reality Kits to be viewed or edited. */
  helpdesks_retrieve: {
    responses: {
      /** @description No response body */
      200: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows Reality Kits to be viewed or edited. */
  helpdesks_create: {
    responses: {
      /** @description No response body */
      201: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows Reality Kits to be viewed or edited. */
  helpdesks_retrieve_2: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      200: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"][];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Location"];
        "application/x-www-form-urlencoded": components["schemas"]["Location"];
        "multipart/form-data": components["schemas"]["Location"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Location"];
        "application/x-www-form-urlencoded": components["schemas"]["Location"];
        "multipart/form-data": components["schemas"]["Location"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedLocation"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedLocation"];
        "multipart/form-data": components["schemas"]["PatchedLocation"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"][];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedProject"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedProject"];
        "multipart/form-data": components["schemas"]["PatchedProject"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows Mentor Requests to be viewed or edited. */
  request_mentor_retrieve: {
    responses: {
      /** @description No response body */
      200: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows Mentor Requests to be viewed or edited. */
  request_mentor_create: {
    responses: {
      /** @description No response body */
      201: {
        content: never;
      };
    };
  };
  /**
   * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
   *
   * - YAML: application/vnd.oai.openapi
   * - JSON: application/vnd.oai.openapi+json
   */
  schema_spectacular_retrieve: {
    parameters: {
      query?: {
        format?: "json" | "yaml";
        lang?: "af" | "ar" | "ar-dz" | "ast" | "az" | "be" | "bg" | "bn" | "br" | "bs" | "ca" | "ckb" | "cs" | "cy" | "da" | "de" | "dsb" | "el" | "en" | "en-au" | "en-gb" | "eo" | "es" | "es-ar" | "es-co" | "es-mx" | "es-ni" | "es-ve" | "et" | "eu" | "fa" | "fi" | "fr" | "fy" | "ga" | "gd" | "gl" | "he" | "hi" | "hr" | "hsb" | "hu" | "hy" | "ia" | "id" | "ig" | "io" | "is" | "it" | "ja" | "ka" | "kab" | "kk" | "km" | "kn" | "ko" | "ky" | "lb" | "lt" | "lv" | "mk" | "ml" | "mn" | "mr" | "ms" | "my" | "nb" | "ne" | "nl" | "nn" | "os" | "pa" | "pl" | "pt" | "pt-br" | "ro" | "ru" | "sk" | "sl" | "sq" | "sr" | "sr-latn" | "sv" | "sw" | "ta" | "te" | "tg" | "th" | "tk" | "tr" | "tt" | "udm" | "uk" | "ur" | "uz" | "vi" | "zh-hans" | "zh-hant";
      };
    };
    responses: {
      200: {
        content: {
          "application/vnd.oai.openapi": {
            [key: string]: unknown;
          };
          "application/yaml": {
            [key: string]: unknown;
          };
          "application/vnd.oai.openapi+json": {
            [key: string]: unknown;
          };
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiency"][];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillProficiencyCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["SkillProficiencyCreate"];
        "multipart/form-data": components["schemas"]["SkillProficiencyCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillProficiencyCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["SkillProficiencyCreate"];
        "multipart/form-data": components["schemas"]["SkillProficiencyCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSkillProficiencyCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSkillProficiencyCreate"];
        "multipart/form-data": components["schemas"]["PatchedSkillProficiencyCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"][];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Skill"];
        "application/x-www-form-urlencoded": components["schemas"]["Skill"];
        "multipart/form-data": components["schemas"]["Skill"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Skill"];
        "application/x-www-form-urlencoded": components["schemas"]["Skill"];
        "multipart/form-data": components["schemas"]["Skill"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSkill"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSkill"];
        "multipart/form-data": components["schemas"]["PatchedSkill"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"][];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TableCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["TableCreate"];
        "multipart/form-data": components["schemas"]["TableCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["TableCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Table"];
        "application/x-www-form-urlencoded": components["schemas"]["Table"];
        "multipart/form-data": components["schemas"]["Table"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedTable"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedTable"];
        "multipart/form-data": components["schemas"]["PatchedTable"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_list: {
    parameters: {
      query?: {
        attendees?: string[];
        name?: string;
        /** @description A search term. */
        search?: string;
        table?: string;
        table__number?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"][];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["TeamCreate"];
        "multipart/form-data": components["schemas"]["TeamCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["TeamCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Team"];
        "application/x-www-form-urlencoded": components["schemas"]["Team"];
        "multipart/form-data": components["schemas"]["Team"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedTeam"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedTeam"];
        "multipart/form-data": components["schemas"]["PatchedTeam"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_list: {
    parameters: {
      query?: {
        claimed?: boolean;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"][];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FileUpload"];
        "application/x-www-form-urlencoded": components["schemas"]["FileUpload"];
        "multipart/form-data": components["schemas"]["FileUpload"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FileUpload"];
        "application/x-www-form-urlencoded": components["schemas"]["FileUpload"];
        "multipart/form-data": components["schemas"]["FileUpload"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedFileUpload"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedFileUpload"];
        "multipart/form-data": components["schemas"]["PatchedFileUpload"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
}
