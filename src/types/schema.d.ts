/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/applications/": {
    /** @description API endpoint that allows applications to be viewed or edited. */
    get: operations["applications_list"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    post: operations["applications_create"];
  };
  "/applications/{id}/": {
    /** @description API endpoint that allows applications to be viewed or edited. */
    get: operations["applications_retrieve"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    put: operations["applications_update"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    delete: operations["applications_destroy"];
    /** @description API endpoint that allows applications to be viewed or edited. */
    patch: operations["applications_partial_update"];
  };
  "/attendeepreferences/": {
    /** @description API endpoint that allows attendee preferences to be viewed or edited. */
    get: operations["attendeepreferences_list"];
    /** @description API endpoint that allows attendee preferences to be viewed or edited. */
    post: operations["attendeepreferences_create"];
  };
  "/attendeepreferences/{id}/": {
    /** @description API endpoint that allows attendee preferences to be viewed or edited. */
    get: operations["attendeepreferences_retrieve"];
    /** @description API endpoint that allows attendee preferences to be viewed or edited. */
    put: operations["attendeepreferences_update"];
    /** @description API endpoint that allows attendee preferences to be viewed or edited. */
    delete: operations["attendeepreferences_destroy"];
    /** @description API endpoint that allows attendee preferences to be viewed or edited. */
    patch: operations["attendeepreferences_partial_update"];
  };
  "/attendees/": {
    /** @description API endpoint that allows users to be viewed or edited. */
    get: operations["attendees_list"];
    /** @description API endpoint that allows users to be viewed or edited. */
    post: operations["attendees_create"];
  };
  "/attendees/{id}/": {
    /** @description API endpoint that allows users to be viewed or edited. */
    get: operations["attendees_retrieve"];
    /** @description API endpoint that allows users to be viewed or edited. */
    put: operations["attendees_update"];
    /** @description API endpoint that allows users to be viewed or edited. */
    delete: operations["attendees_destroy"];
    /** @description API endpoint that allows users to be viewed or edited. */
    patch: operations["attendees_partial_update"];
  };
  "/auth/schema/": {
    /**
     * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     * - YAML: application/vnd.oai.openapi
     * - JSON: application/vnd.oai.openapi+json
     */
    get: operations["auth_schema_retrieve"];
  };
  "/auth/token/": {
    /**
     * @description Takes a set of user credentials and returns an access and refresh JSON web
     * token pair to prove the authentication of those credentials.
     */
    post: operations["auth_token_create"];
  };
  "/auth/token/refresh/": {
    /**
     * @description Takes a refresh type JSON web token and returns an access type JSON web
     * token if the refresh token is valid.
     */
    post: operations["auth_token_refresh_create"];
  };
  "/auth/token/verify/": {
    /**
     * @description Takes a token and indicates if it is valid.  This view provides no
     * information about a token's fitness for a particular use.
     */
    post: operations["auth_token_verify_create"];
  };
  "/destinyteamattendeevibes/": {
    /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
    get: operations["destinyteamattendeevibes_list"];
    /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
    post: operations["destinyteamattendeevibes_create"];
  };
  "/destinyteamattendeevibes/{id}/": {
    /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
    get: operations["destinyteamattendeevibes_retrieve"];
    /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
    put: operations["destinyteamattendeevibes_update"];
    /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
    delete: operations["destinyteamattendeevibes_destroy"];
    /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
    patch: operations["destinyteamattendeevibes_partial_update"];
  };
  "/destinyteams/": {
    /** @description API endpoint that allows Destiny teams to be viewed or edited. */
    get: operations["destinyteams_list"];
    /** @description API endpoint that allows Destiny teams to be viewed or edited. */
    post: operations["destinyteams_create"];
  };
  "/destinyteams/{id}/": {
    /** @description API endpoint that allows Destiny teams to be viewed or edited. */
    get: operations["destinyteams_retrieve"];
    /** @description API endpoint that allows Destiny teams to be viewed or edited. */
    put: operations["destinyteams_update"];
    /** @description API endpoint that allows Destiny teams to be viewed or edited. */
    delete: operations["destinyteams_destroy"];
    /** @description API endpoint that allows Destiny teams to be viewed or edited. */
    patch: operations["destinyteams_partial_update"];
  };
  "/discord/": {
    /** @description API Endpoint that allows for Discord information to be viewed or edited. */
    get: operations["discord_list"];
  };
  "/discord/{attendee__communications_platform_username}/": {
    /** @description API Endpoint that allows for Discord information to be viewed or edited. */
    delete: operations["discord_destroy"];
  };
  "/groups/": {
    /** @description API endpoint that allows groups to be viewed or edited. */
    get: operations["groups_list"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    post: operations["groups_create"];
  };
  "/groups/{id}/": {
    /** @description API endpoint that allows groups to be viewed or edited. */
    get: operations["groups_retrieve"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    put: operations["groups_update"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    delete: operations["groups_destroy"];
    /** @description API endpoint that allows groups to be viewed or edited. */
    patch: operations["groups_partial_update"];
  };
  "/hardware/": {
    /** @description API endpoint that allows hardware to be viewed or edited. */
    get: operations["hardware_list"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    post: operations["hardware_create"];
  };
  "/hardware/{id}/": {
    /** @description API endpoint that allows hardware to be viewed or edited. */
    get: operations["hardware_retrieve"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    put: operations["hardware_update"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    delete: operations["hardware_destroy"];
    /** @description API endpoint that allows hardware to be viewed or edited. */
    patch: operations["hardware_partial_update"];
  };
  "/hardwaredevicehistory/": {
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    get: operations["hardwaredevicehistory_list"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    post: operations["hardwaredevicehistory_create"];
  };
  "/hardwaredevicehistory/{history_id}/": {
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    get: operations["hardwaredevicehistory_retrieve"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    put: operations["hardwaredevicehistory_update"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    delete: operations["hardwaredevicehistory_destroy"];
    /** @description API endpoint that allows hardware device historical records to be viewed. */
    patch: operations["hardwaredevicehistory_partial_update"];
  };
  "/hardwaredevices/": {
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    get: operations["hardwaredevices_list"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    post: operations["hardwaredevices_create"];
  };
  "/hardwaredevices/{id}/": {
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    get: operations["hardwaredevices_retrieve"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    put: operations["hardwaredevices_update"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    delete: operations["hardwaredevices_destroy"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    patch: operations["hardwaredevices_partial_update"];
  };
  "/hardwarerequests/": {
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    get: operations["hardwarerequests_list"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    post: operations["hardwarerequests_create"];
  };
  "/hardwarerequests/{id}/": {
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    get: operations["hardwarerequests_retrieve"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    put: operations["hardwarerequests_update"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    delete: operations["hardwarerequests_destroy"];
    /** @description API endpoint that allows hardware devices to be viewed or edited. */
    patch: operations["hardwarerequests_partial_update"];
  };
  "/lighthouses/": {
    /** @description API endpoint that allows Reality Kits to be viewed or edited. */
    get: operations["lighthouses_list"];
    /** @description API endpoint that allows Reality Kits to be viewed or edited. */
    post: operations["lighthouses_create"];
  };
  "/lighthouses/{table__number}/": {
    /** @description API endpoint that allows Reality Kits to be viewed or edited. */
    get: operations["lighthouses_retrieve"];
  };
  "/locations/": {
    /** @description API endpoint that allows locations to be viewed or edited. */
    get: operations["locations_list"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    post: operations["locations_create"];
  };
  "/locations/{id}/": {
    /** @description API endpoint that allows locations to be viewed or edited. */
    get: operations["locations_retrieve"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    put: operations["locations_update"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    delete: operations["locations_destroy"];
    /** @description API endpoint that allows locations to be viewed or edited. */
    patch: operations["locations_partial_update"];
  };
  "/me/": {
    /** @description API endpoint for getting detailed information about an authenticated user. */
    get: operations["me_retrieve"];
    /** @description API endpoint for getting detailed information about an authenticated user. */
    patch: operations["me_partial_update"];
  };
  "/mentorhelprequests/": {
    /** @description API endpoint that allows mentor help requests to be viewed or edited. */
    get: operations["mentorhelprequests_list"];
    /** @description API endpoint that allows mentor help requests to be viewed or edited. */
    post: operations["mentorhelprequests_create"];
  };
  "/mentorhelprequests/{id}/": {
    /** @description API endpoint that allows mentor help requests to be viewed or edited. */
    get: operations["mentorhelprequests_retrieve"];
    /** @description API endpoint that allows mentor help requests to be viewed or edited. */
    put: operations["mentorhelprequests_update"];
    /** @description API endpoint that allows mentor help requests to be viewed or edited. */
    delete: operations["mentorhelprequests_destroy"];
    /** @description API endpoint that allows mentor help requests to be viewed or edited. */
    patch: operations["mentorhelprequests_partial_update"];
  };
  "/mentorhelprequestshistory/": {
    /** @description API endpoint that allows mentor help requests historical records to be viewed. */
    get: operations["mentorhelprequestshistory_list"];
    /** @description API endpoint that allows mentor help requests historical records to be viewed. */
    post: operations["mentorhelprequestshistory_create"];
  };
  "/mentorhelprequestshistory/{history_id}/": {
    /** @description API endpoint that allows mentor help requests historical records to be viewed. */
    get: operations["mentorhelprequestshistory_retrieve"];
    /** @description API endpoint that allows mentor help requests historical records to be viewed. */
    put: operations["mentorhelprequestshistory_update"];
    /** @description API endpoint that allows mentor help requests historical records to be viewed. */
    delete: operations["mentorhelprequestshistory_destroy"];
    /** @description API endpoint that allows mentor help requests historical records to be viewed. */
    patch: operations["mentorhelprequestshistory_partial_update"];
  };
  "/projects/": {
    /** @description API endpoint that allows projects to be viewed or edited. */
    get: operations["projects_list"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    post: operations["projects_create"];
  };
  "/projects/{id}/": {
    /** @description API endpoint that allows projects to be viewed or edited. */
    get: operations["projects_retrieve"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    put: operations["projects_update"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    delete: operations["projects_destroy"];
    /** @description API endpoint that allows projects to be viewed or edited. */
    patch: operations["projects_partial_update"];
  };
  "/rsvps/": {
    /** @description API endpoint that allows users to be viewed or edited. */
    get: operations["rsvps_list"];
    /** @description API endpoint that allows users to be viewed or edited. */
    post: operations["rsvps_create"];
  };
  "/rsvps/{id}/": {
    /** @description API endpoint that allows users to be viewed or edited. */
    get: operations["rsvps_retrieve"];
    /** @description API endpoint that allows users to be viewed or edited. */
    put: operations["rsvps_update"];
    /** @description API endpoint that allows users to be viewed or edited. */
    delete: operations["rsvps_destroy"];
    /** @description API endpoint that allows users to be viewed or edited. */
    patch: operations["rsvps_partial_update"];
  };
  "/schema/spectacular/": {
    /**
     * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     * - YAML: application/vnd.oai.openapi
     * - JSON: application/vnd.oai.openapi+json
     */
    get: operations["schema_spectacular_retrieve"];
  };
  "/skillproficiencies/": {
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    get: operations["skillproficiencies_list"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    post: operations["skillproficiencies_create"];
  };
  "/skillproficiencies/{id}/": {
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    get: operations["skillproficiencies_retrieve"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    put: operations["skillproficiencies_update"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    delete: operations["skillproficiencies_destroy"];
    /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
    patch: operations["skillproficiencies_partial_update"];
  };
  "/skills/": {
    /** @description API endpoint that allows skills to be viewed or edited. */
    get: operations["skills_list"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    post: operations["skills_create"];
  };
  "/skills/{id}/": {
    /** @description API endpoint that allows skills to be viewed or edited. */
    get: operations["skills_retrieve"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    put: operations["skills_update"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    delete: operations["skills_destroy"];
    /** @description API endpoint that allows skills to be viewed or edited. */
    patch: operations["skills_partial_update"];
  };
  "/tables/": {
    /** @description API endpoint that allows tables to be viewed or edited. */
    get: operations["tables_list"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    post: operations["tables_create"];
  };
  "/tables/{id}/": {
    /** @description API endpoint that allows tables to be viewed or edited. */
    get: operations["tables_retrieve"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    put: operations["tables_update"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    delete: operations["tables_destroy"];
    /** @description API endpoint that allows tables to be viewed or edited. */
    patch: operations["tables_partial_update"];
  };
  "/teams/": {
    /** @description API endpoint that allows teams to be viewed or edited. */
    get: operations["teams_list"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    post: operations["teams_create"];
  };
  "/teams/{id}/": {
    /** @description API endpoint that allows teams to be viewed or edited. */
    get: operations["teams_retrieve"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    put: operations["teams_update"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    delete: operations["teams_destroy"];
    /** @description API endpoint that allows teams to be viewed or edited. */
    patch: operations["teams_partial_update"];
  };
  "/uploaded_files/": {
    /** @description API endpoint that allows files to be viewed or edited. */
    get: operations["uploaded_files_list"];
    /** @description API endpoint that allows files to be viewed or edited. */
    post: operations["uploaded_files_create"];
  };
  "/uploaded_files/{id}/": {
    /** @description API endpoint that allows files to be viewed or edited. */
    get: operations["uploaded_files_retrieve"];
    /** @description API endpoint that allows files to be viewed or edited. */
    put: operations["uploaded_files_update"];
    /** @description API endpoint that allows files to be viewed or edited. */
    delete: operations["uploaded_files_destroy"];
    /** @description API endpoint that allows files to be viewed or edited. */
    patch: operations["uploaded_files_partial_update"];
  };
  "/workshopattendees/": {
    /** @description API endpoint that allows workshop attendees to be viewed or edited. */
    get: operations["workshopattendees_list"];
    /** @description API endpoint that allows workshop attendees to be viewed or edited. */
    post: operations["workshopattendees_create"];
  };
  "/workshopattendees/{id}/": {
    /** @description API endpoint that allows workshop attendees to be viewed or edited. */
    get: operations["workshopattendees_retrieve"];
    /** @description API endpoint that allows workshop attendees to be viewed or edited. */
    put: operations["workshopattendees_update"];
    /** @description API endpoint that allows workshop attendees to be viewed or edited. */
    delete: operations["workshopattendees_destroy"];
    /** @description API endpoint that allows workshop attendees to be viewed or edited. */
    patch: operations["workshopattendees_partial_update"];
  };
  "/workshops/": {
    /** @description API endpoint that allows workshops to be viewed ot edited. */
    get: operations["workshops_list"];
    /** @description API endpoint that allows workshops to be viewed ot edited. */
    post: operations["workshops_create"];
  };
  "/workshops/{id}/": {
    /** @description API endpoint that allows workshops to be viewed ot edited. */
    get: operations["workshops_retrieve"];
    /** @description API endpoint that allows workshops to be viewed ot edited. */
    put: operations["workshops_update"];
    /** @description API endpoint that allows workshops to be viewed ot edited. */
    delete: operations["workshops_destroy"];
    /** @description API endpoint that allows workshops to be viewed ot edited. */
    patch: operations["workshops_partial_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @description * `A` - 17 or younger
     * * `B` - 18 to 20
     * * `C` - 21 to 29
     * * `D` - 30 to 39
     * * `E` - 40 to 49
     * * `F` - 50 to 59
     * * `G` - 60 or older
     * * `H` - I prefer not to say
     * @enum {string}
     */
    AgeGroupEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H";
    /**
     * @description * `S` - Send
     * * `A` - Alert
     * * `F` - Resolve
     * @enum {string}
     */
    AnnouncementPendingEnum: "S" | "A" | "F";
    // TODO: move to RSVP
    // disabilities: components["schemas"]["DisabilitiesEnum"][];
    // disabilities_other?: string | null;
    // disability_accommodations?: string | null;
    Application: {
      /** Format: uuid */
      id: string;
      gender_identity: components["schemas"]["GenderIdentityEnum"][];
      nationality: components["schemas"]["UsVisaSupportCitizenshipEnum"][];
      current_country: components["schemas"]["UsVisaSupportCitizenshipEnum"][];
      race_ethnic_group: components["schemas"]["RaceEthnicGroupEnum"][];
      previous_participation: components["schemas"]["PreviousParticipationEnum"][];
      heard_about_us: components["schemas"]["HeardAboutUsEnum"][];
      digital_designer_skills: components["schemas"]["DigitalDesignerSkillsEnum"][];
      industry: components["schemas"]["IndustryEnum"][];
      first_name: string;
      middle_name?: string | null;
      last_name: string;
      participation_class?: components["schemas"]["ApplicationParticipationClassEnum"];
      current_city?: string | null;
      pronouns?: string | null;
      age_group?: components["schemas"]["AgeGroupEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: email */
      email: string;
      event_year?: number;
      /** Format: uri */
      portfolio?: string | null;
      /** Format: uri */
      secondary_portfolio?: string | null;
      gender_identity_other?: string | null;
      race_ethnic_group_other?: string | null;
      disability_identity?: components["schemas"]["DisabilityIdentityEnum"] | components["schemas"]["NullEnum"] | null;
      participation_capacity?: components["schemas"]["ParticipationCapacityEnum"] | components["schemas"]["NullEnum"] | null;
      student_school?: string | null;
      student_field_of_study?: string | null;
      occupation?: string | null;
      employer?: string | null;
      industry_other?: string | null;
      specialized_expertise?: string | null;
      status?: components["schemas"]["ApplicationStatusEnum"] | components["schemas"]["NullEnum"] | null;
      previously_participated?: boolean | null;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      experience_with_xr?: string | null;
      experience_contribution?: string | null;
      theme_essay?: string | null;
    //   theme_essay_follow_up?: string | null;
      theme_interest_track_one?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      theme_interest_track_two?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      theme_detail_one?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      theme_detail_two?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      theme_detail_three?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      hardware_hack_interest?: components["schemas"]["HardwareHackInterestEnum"];
      hardware_hack_detail?: components["schemas"]["HardwareHackDetailEnum"];
      heard_about_us_other?: string | null;
      digital_designer_skills_other?: string | null;
      communications_platform_username?: string | null;
      outreach_groups?: string | null;
      /** Format: date-time */
      submitted_at: string;
      /** Format: date-time */
      updated_at: string;
      mentor_qualified_fields?: string | null;
      mentor_mentoring_steps?: string | null;
      mentor_previously_mentored?: boolean | null;
      judge_judging_steps?: string | null;
      judge_invited_by?: string | null;
      judge_previously_judged?: boolean | null;
      /** Format: date-time */
      rsvp_email_sent_at?: string | null;
      /** Format: uuid */
      resume?: string | null;
    };
    /**
     * @description * `P` - Participant
     * * `M` - Mentor
     * * `J` - Judge
     * @enum {string}
     */
    ApplicationParticipationClassEnum: "P" | "M" | "J";
    /**
     * @description * `AI` - Accepted, In-Person
     * * `AO` - Accepted, Online
     * * `WI` - Wait-list, In-Person
     * * `WO` - Wait-list, Online
     * * `D` - Declined
     * @enum {string}
     */
    ApplicationStatusEnum: "AI" | "AO" | "WI" | "WO" | "D";
    Attendee: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: date-time */
      checked_in_at?: string | null;
      /** Format: uuid */
      profile_image?: string | null;
      initial_setup?: boolean;
      guardian_of?: string[];
      /** Format: uuid */
      sponsor_handler?: string | null;
      prefers_destiny_hardware: components["schemas"]["RelatesToDestinyHardwareEnum"][];
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      /** Format: email */
      email: string;
      intended_tracks: components["schemas"]["IntendedTracksEnum"][];
      intended_hardware_hack?: boolean;
      sponsor_company?: string | null;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    AttendeeList: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: date-time */
      checked_in_at?: string | null;
      /** Format: uuid */
      profile_image?: string | null;
      initial_setup?: boolean;
      guardian_of?: string[];
      /** Format: uuid */
      sponsor_handler?: string | null;
      prefers_destiny_hardware: components["schemas"]["RelatesToDestinyHardwareEnum"][];
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      intended_tracks: components["schemas"]["IntendedTracksEnum"][];
      intended_hardware_hack?: boolean;
      sponsor_company?: string | null;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    AttendeeName: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
    };
    AttendeePatch: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
      authentication_id?: string | null;
      /** Format: uuid */
      profile_image?: string | null;
      bio?: string;
      /** Format: date-time */
      checked_in_at?: string | null;
      prefers_destiny_hardware: components["schemas"]["RelatesToDestinyHardwareEnum"][];
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      /** Format: email */
      email: string;
      sponsor_company?: string | null;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      initial_setup?: boolean;
      guardian_of?: string[];
      /** Format: uuid */
      sponsor_handler?: string | null;
      intended_tracks: components["schemas"]["IntendedTracksEnum"][];
      intended_hardware_hack?: boolean;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    AttendeePreference: {
      /** Format: uuid */
      id: string;
      preference: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"];
      /** Format: uuid */
      preferer: string;
      /** Format: uuid */
      preferee: string;
    };
    AttendeeRSVP: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: uuid */
      profile_image?: string | null;
      initial_setup?: boolean;
      guardian_of?: string[];
      /** Format: uuid */
      sponsor_handler?: string | null;
      /** Format: uuid */
      application?: string | null;
      bio?: string;
      /** Format: email */
      email: string;
      shirt_size?: components["schemas"]["ShirtSizeEnum"] | components["schemas"]["NullEnum"] | null;
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      dietary_restrictions: components["schemas"]["DietaryRestrictionsEnum"][];
      dietary_restrictions_other?: string | null;
      dietary_allergies: components["schemas"]["DietaryAllergiesEnum"][];
      dietary_allergies_other?: string | null;
      additional_accommodations?: string | null;
      /** Format: date-time */
      checked_in_at?: string | null;
      us_visa_support_is_required: boolean;
      us_visa_letter_of_invitation_required?: boolean | null;
      us_visa_support_full_name?: string | null;
      us_visa_support_document_number?: string | null;
      us_visa_support_national_identification_document_type?: components["schemas"]["UsVisaSupportNationalIdentificationDocumentTypeEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_citizenship?: components["schemas"]["UsVisaSupportCitizenshipEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_address?: string | null;
      /** @description Will you be under 18 on January 23, 2025 */
      under_18_by_date?: boolean | null;
      parental_consent_form_signed?: boolean | null;
      agree_to_media_release?: boolean;
      agree_to_liability_release?: boolean;
      agree_to_rules_code_of_conduct?: boolean;
      emergency_contact_name: string;
      personal_phone_number: string;
      emergency_contact_phone_number: string;
      /** Format: email */
      emergency_contact_email: string;
      emergency_contact_relationship: string;
      special_track_snapdragon_spaces_interest?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"] | components["schemas"]["NullEnum"] | null;
      special_track_future_constructors_interest?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"] | components["schemas"]["NullEnum"] | null;
      /** @description Do you already have an AR or VR app in any store? And if so, which store(s)? */
      app_in_store?: string | null;
      currently_build_for_xr?: string | null;
      currently_use_xr?: string | null;
      non_xr_talents?: string | null;
      ar_vr_ap_in_store?: string | null;
      reality_hack_project_to_product?: boolean;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      sponsor_company?: string | null;
    };
    AttendeeRSVPCreate: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: uuid */
      profile_image?: string | null;
      authentication_id?: string | null;
      /** Format: uuid */
      application?: string | null;
      bio?: string;
      /** Format: email */
      email: string;
      shirt_size?: components["schemas"]["ShirtSizeEnum"] | components["schemas"]["NullEnum"] | null;
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      dietary_restrictions: components["schemas"]["DietaryRestrictionsEnum"][];
      dietary_restrictions_other?: string | null;
      dietary_allergies: components["schemas"]["DietaryAllergiesEnum"][];
      dietary_allergies_other?: string | null;
      additional_accommodations?: string | null;
      us_visa_support_is_required: boolean;
      us_visa_letter_of_invitation_required?: boolean | null;
      us_visa_support_full_name?: string | null;
      us_visa_support_document_number?: string | null;
      us_visa_support_national_identification_document_type?: components["schemas"]["UsVisaSupportNationalIdentificationDocumentTypeEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_citizenship?: components["schemas"]["UsVisaSupportCitizenshipEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_address?: string | null;
      /** @description Will you be under 18 on January 23, 2025 */
      under_18_by_date?: boolean | null;
      parental_consent_form_signed?: boolean | null;
      agree_to_media_release?: boolean;
      agree_to_liability_release?: boolean;
      agree_to_rules_code_of_conduct?: boolean;
      emergency_contact_name: string;
      personal_phone_number: string;
      emergency_contact_phone_number: string;
      /** Format: email */
      emergency_contact_email: string;
      emergency_contact_relationship: string;
      special_track_snapdragon_spaces_interest?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"] | components["schemas"]["NullEnum"] | null;
      special_track_future_constructors_interest?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"] | components["schemas"]["NullEnum"] | null;
      /** @description Do you already have an AR or VR app in any store? And if so, which store(s)? */
      app_in_store?: string | null;
      currently_build_for_xr?: string | null;
      currently_use_xr?: string | null;
      non_xr_talents?: string | null;
      ar_vr_ap_in_store?: string | null;
      reality_hack_project_to_product?: boolean;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      sponsor_company?: string | null;
    };
    /** @enum {unknown} */
    BlankEnum: "";
    /**
     * @description * `D` - Development
     * * `A` - Design
     * * `P` - Prototyping
     * * `M` - Project Management and Leadership
     * * `S` - Specialty
     * @enum {string}
     */
    CategoryEnum: "D" | "A" | "P" | "M" | "S";
    DestinyTeam: {
      /** Format: uuid */
      id: string;
      attendees: components["schemas"]["AttendeeName"][];
      table: components["schemas"]["TableNumber"];
      track?: components["schemas"]["TrackEnum"] | components["schemas"]["NullEnum"] | null;
      round: number;
      hardware_hack?: boolean;
      destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"] | components["schemas"]["BlankEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    DestinyTeamAttendeeVibe: {
      /** Format: uuid */
      id: string;
      vibe: number;
      /** Format: uuid */
      destiny_team: string;
      /** Format: uuid */
      attendee: string;
    };
    DestinyTeamUpdate: {
      /** Format: uuid */
      id: string;
      table: components["schemas"]["TableNumber"];
      track?: components["schemas"]["TrackEnum"] | components["schemas"]["NullEnum"] | null;
      round: number;
      hardware_hack?: boolean;
      destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"] | components["schemas"]["BlankEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
      attendees?: string[];
    };
    /**
     * @description * `1` - Nut allergy
     * * `2` - Shellfish allergy
     * * `3` - Dairy allergy
     * * `4` - Soy allergy
     * * `5` - Other
     * @enum {string}
     */
    DietaryAllergiesEnum: "1" | "2" | "3" | "4" | "5";
    /**
     * @description * `1` - Vegetarian
     * * `2` - Vegan
     * * `3` - Gluten free
     * * `4` - Halal
     * * `5` - Lactose Intolerant
     * * `6` - Kosher
     * * `7` - Other
     * @enum {string}
     */
    DietaryRestrictionsEnum: "1" | "2" | "3" | "4" | "5" | "6" | "7";
    /**
     * @description * `A` - Digital Art
     * * `B` - Animation
     * * `C` - Sound
     * * `D` - UX and UI
     * * `E` - Video
     * * `F` - Other
     * @enum {string}
     */
    DigitalDesignerSkillsEnum: "A" | "B" | "C" | "D" | "E" | "F";
    /**
     * @description * `A` - Hearing difficulty - Deaf or having serious difficulty hearing (DEAR).
     * * `B` - Vision difficulty - Blind or having serious difficulty seeing, even when wearing glasses (DEYE).
     * * `C` - Cognitive difficulty - Because of a physical, mental, or emotional problem, having difficulty remembering, concentrating, or making decisions (DREM).
     * * `D` - Ambulatory difficulty - Having serious difficulty walking or climbing stairs (DPHY).
     * * `E` - Self-care difficulty - Having difficulty bathing or dressing (DDRS).
     * * `F` - Independent living difficulty - Because of a physical, mental, or emotional problem, having difficulty doing errands alone such as visiting a doctor's office or shopping (DOUT).
     * * `G` - I prefer not to say
     * * `O` - Other
     * @enum {string}
     */
    DisabilitiesEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "O";
    /**
     * @description * `A` - Yes
     * * `B` - No
     * * `C` - I prefer not to say
     * @enum {string}
     */
    DisabilityIdentityEnum: "A" | "B" | "C";
    DiscordUsernameRole: {
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
    };
    FileUpload: {
      /** Format: uuid */
      id: string;
      /** Format: uri */
      file: string;
      claimed?: boolean;
      /** Format: date-time */
      created_at: string;
    };
    /**
     * @description * `A` - Cisgender female
     * * `B` - Cisgender male
     * * `C` - Transgender female
     * * `D` - Transgender male
     * * `E` - Gender non-conforming, non-binary, or gender queer
     * * `F` - Two-spirit
     * * `G` - I prefer not to say
     * * `O` - Other
     * @enum {string}
     */
    GenderIdentityEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "O";
    GroupDetail: {
      id: number;
      name: string;
      permissions?: number[];
    };
    Hardware: {
      /** Format: uuid */
      id: string;
      name: string;
      description?: string;
      image: components["schemas"]["FileUpload"];
      tags: components["schemas"]["TagsEnum"][];
      relates_to_destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareCount: {
      /** Format: uuid */
      id: string;
      name: string;
      description?: string;
      image: components["schemas"]["FileUpload"];
      available: number;
      checked_out: number;
      total: number;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
      tags: components["schemas"]["TagsEnum"][];
    };
    HardwareCreate: {
      /** Format: uuid */
      id: string;
      name: string;
      description?: string;
      /** Format: uuid */
      image?: string | null;
      tags: components["schemas"]["TagsEnum"][];
      relates_to_destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"] | components["schemas"]["NullEnum"] | null;
    };
    HardwareDevice: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware: string;
      serial: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareDeviceDetail: {
      /** Format: uuid */
      id: string;
      hardware: components["schemas"]["HardwareDeviceHardware"];
      serial: string;
      checked_out_to: components["schemas"]["HardwareRequest"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareDeviceHardware: {
      /** Format: uuid */
      id: string;
      name: string;
      tags?: components["schemas"]["TagsEnum"] | components["schemas"]["NullEnum"] | null;
    };
    HardwareDeviceHistory: {
      history_id: number;
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware?: string | null;
      serial: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `A` - Not at all interested; I'll pass
     * * `B` - Some mild interest
     * * `C` - Most likely
     * * `D` - 100%; I want to join
     * @enum {string}
     */
    HardwareHackInterestEnum: "A" | "B" | "C" | "D";
    /**
     * @description * `A` - 3D Printing
     * * `B` - Soldering
     * * `C` - Circuits
     * * `D` - Arduino
     * * `E` - ESP32
     * * `F` - Unity
     * * `G` - Physical Prototyping 
     * * `H` - I have no prior experience
     * * `O` - Other
     * @enum {string}
     */
    HardwareHackDetailEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "O";
    HardwareRequest: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware: string;
      /** Format: uuid */
      hardware_device?: string | null;
      /** Format: uuid */
      requester?: string | null;
      /** Format: uuid */
      team?: string | null;
      reason?: string;
      status?: components["schemas"]["StatusB9cEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareRequestCreate: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware: string;
      /** Format: uuid */
      hardware_device?: string | null;
      /** Format: email */
      requester: string;
      /** Format: uuid */
      team?: string | null;
      reason?: string;
      status?: components["schemas"]["StatusB9cEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareRequestDetail: {
      /** Format: uuid */
      id: string;
      hardware: components["schemas"]["HardwareCount"];
      hardware_device: components["schemas"]["HardwareDeviceDetail"];
      requester: components["schemas"]["Attendee"];
      team: components["schemas"]["Team"];
      reason?: string;
      status?: components["schemas"]["StatusB9cEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareRequestList: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      hardware: string;
      /** Format: uuid */
      hardware_device?: string | null;
      requester: components["schemas"]["HardwareRequestRequester"];
      /** Format: uuid */
      team?: string | null;
      reason?: string;
      status?: components["schemas"]["StatusB9cEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    HardwareRequestRequester: {
      /** Format: uuid */
      id: string;
      first_name?: string;
      last_name?: string;
    };
    /**
     * @description * `F` - A friend
     * * `V` - A Reality Hack organizer or volunteer
     * * `N` - A teacher or someone in my professional network
     * * `S` - Social media
     * * `C` - Campus poster or ad
     * * `P` - I participated in the MIT XR Hackathon before
     * * `O` - Other
     * @enum {string}
     */
    HeardAboutUsEnum: "F" | "V" | "N" | "S" | "C" | "P" | "O";
    /**
     * @description * `Industry` - Industry
     * * `Accounting ` - Accounting
     * * `Airlines/Aviation` - Airlines/Aviation
     * * `Alternative Dispute Resolution` - Alternative Dispute Resolution
     * * `Alternative Medicine` - Alternative Medicine
     * * `Animation` - Animation
     * * `Apparel/Fashion` - Apparel/Fashion
     * * `Architecture/Planning` - Architecture/Planning
     * * `Arts/Crafts` - Arts/Crafts
     * * `Automotive` - Automotive
     * * `Aviation/Aerospace` - Aviation/Aerospace
     * * `Banking/Mortgage` - Banking/Mortgage
     * * `Biotechnology/Greentech` - Biotechnology/Greentech
     * * `Broadcast Media` - Broadcast Media
     * * `Building Materials` - Building Materials
     * * `Business Supplies/Equipment` - Business Supplies/Equipment
     * * `Capital Markets/Hedge Fund/Private Equity` - Capital Markets/Hedge Fund/Private Equity
     * * `Chemicals` - Chemicals
     * * `Civic/Social Organization` - Civic/Social Organization
     * * `Civil Engineering` - Civil Engineering
     * * `Commercial Real Estate` - Commercial Real Estate
     * * `Computer Games` - Computer Games
     * * `Computer Hardware` - Computer Hardware
     * * `Computer Networking` - Computer Networking
     * * `Computer Software/Engineering` - Computer Software/Engineering
     * * `Computer/Network Security` - Computer/Network Security
     * * `Construction` - Construction
     * * `Consumer Electronics` - Consumer Electronics
     * * `Consumer Goods` - Consumer Goods
     * * `Consumer Services` - Consumer Services
     * * `Cosmetics` - Cosmetics
     * * `Dairy` - Dairy
     * * `Defense/Space` - Defense/Space
     * * `Design` - Design
     * * `E-Learning` - E-Learning
     * * `Education Management` - Education Management
     * * `Electrical/Electronic Manufacturing` - Electrical/Electronic Manufacturing
     * * `Entertainment/Movie Production` - Entertainment/Movie Production
     * * `Environmental Services` - Environmental Services
     * * `Events Services` - Events Services
     * * `Executive Office` - Executive Office
     * * `Facilities Services` - Facilities Services
     * * `Farming` - Farming
     * * `Financial Services` - Financial Services
     * * `Fine Art` - Fine Art
     * * `Fishery` - Fishery
     * * `Food Production` - Food Production
     * * `Food/Beverages` - Food/Beverages
     * * `Fundraising` - Fundraising
     * * `Furniture` - Furniture
     * * `Gambling/Casinos` - Gambling/Casinos
     * * `Glass/Ceramics/Concrete` - Glass/Ceramics/Concrete
     * * `Government Administration` - Government Administration
     * * `Government Relations` - Government Relations
     * * `Graphic Design/Web Design` - Graphic Design/Web Design
     * * `Health/Fitness` - Health/Fitness
     * * `Higher Education/Acadamia` - Higher Education/Acadamia
     * * `Hospital/Health Care` - Hospital/Health Care
     * * `Hospitality` - Hospitality
     * * `Human Resources/HR` - Human Resources/HR
     * * `Import/Export` - Import/Export
     * * `Individual/Family Services` - Individual/Family Services
     * * `Industrial Automation` - Industrial Automation
     * * `Information Services` - Information Services
     * * `Information Technology/IT` - Information Technology/IT
     * * `Insurance` - Insurance
     * * `International Affairs` - International Affairs
     * * `International Trade/Development` - International Trade/Development
     * * `Internet` - Internet
     * * `Investment Banking/Venture` - Investment Banking/Venture
     * * `Investment Management/Hedge Fund/Private Equity` - Investment Management/Hedge Fund/Private Equity
     * * `Judiciary` - Judiciary
     * * `Law Enforcement` - Law Enforcement
     * * `Law Practice/Law Firms` - Law Practice/Law Firms
     * * `Legal Services` - Legal Services
     * * `Legislative Office` - Legislative Office
     * * `Leisure/Travel` - Leisure/Travel
     * * `Library` - Library
     * * `Logistics/Procurement` - Logistics/Procurement
     * * `Luxury Goods/Jewelry` - Luxury Goods/Jewelry
     * * `Machinery` - Machinery
     * * `Management Consulting` - Management Consulting
     * * `Maritime` - Maritime
     * * `Market Research` - Market Research
     * * `Marketing/Advertising/Sales` - Marketing/Advertising/Sales
     * * `Mechanical or Industrial Engineering` - Mechanical or Industrial Engineering
     * * `Media Production` - Media Production
     * * `Medical Equipment` - Medical Equipment
     * * `Medical Practice` - Medical Practice
     * * `Mental Health Care` - Mental Health Care
     * * `Military Industry` - Military Industry
     * * `Mining/Metals` - Mining/Metals
     * * `Motion Pictures/Film` - Motion Pictures/Film
     * * `Museums/Institutions` - Museums/Institutions
     * * `Music` - Music
     * * `Nanotechnology` - Nanotechnology
     * * `Newspapers/Journalism` - Newspapers/Journalism
     * * `Non-Profit/Volunteering` - Non-Profit/Volunteering
     * * `Oil/Energy/Solar/Greentech` - Oil/Energy/Solar/Greentech
     * * `Online Publishing` - Online Publishing
     * * `Outsourcing/Offshoring` - Outsourcing/Offshoring
     * * `Package/Freight Delivery` - Package/Freight Delivery
     * * `Packaging/Containers` - Packaging/Containers
     * * `Paper/Forest Products` - Paper/Forest Products
     * * `Performing Arts` - Performing Arts
     * * `Pharmaceuticals` - Pharmaceuticals
     * * `Philanthropy` - Philanthropy
     * * `Photography` - Photography
     * * `Plastics` - Plastics
     * * `Political Organization` - Political Organization
     * * `Primary/Secondary Education` - Primary/Secondary Education
     * * `Printing` - Printing
     * * `Professional Training` - Professional Training
     * * `Program Development` - Program Development
     * * `Public Relations/PR` - Public Relations/PR
     * * `Public Safety` - Public Safety
     * * `Publishing Industry` - Publishing Industry
     * * `Railroad Manufacture` - Railroad Manufacture
     * * `Ranching` - Ranching
     * * `Real Estate/Mortgage` - Real Estate/Mortgage
     * * `Recreational Facilities/Services` - Recreational Facilities/Services
     * * `Religious Institutions` - Religious Institutions
     * * `Renewables/Environment` - Renewables/Environment
     * * `Research Industry` - Research Industry
     * * `Restaurants` - Restaurants
     * * `Retail Industry` - Retail Industry
     * * `Security/Investigations` - Security/Investigations
     * * `Semiconductors` - Semiconductors
     * * `Shipbuilding` - Shipbuilding
     * * `Sporting Goods` - Sporting Goods
     * * `Sports` - Sports
     * * `Staffing/Recruiting` - Staffing/Recruiting
     * * `Supermarkets` - Supermarkets
     * * `Telecommunications` - Telecommunications
     * * `Textiles` - Textiles
     * * `Think Tanks` - Think Tanks
     * * `Tobacco` - Tobacco
     * * `Translation/Localization` - Translation/Localization
     * * `Transportation` - Transportation
     * * `Utilities` - Utilities
     * * `Venture Capital/VC` - Venture Capital/VC
     * * `Veterinary` - Veterinary
     * * `Warehousing` - Warehousing
     * * `Wholesale` - Wholesale
     * * `Wine/Spirits` - Wine/Spirits
     * * `Wireless` - Wireless
     * * `Writing/Editing` - Writing/Editing
     * * `Other` - Other
     * @enum {string}
     */
    IndustryEnum: "Industry" | "Accounting " | "Airlines/Aviation" | "Alternative Dispute Resolution" | "Alternative Medicine" | "Animation" | "Apparel/Fashion" | "Architecture/Planning" | "Arts/Crafts" | "Automotive" | "Aviation/Aerospace" | "Banking/Mortgage" | "Biotechnology/Greentech" | "Broadcast Media" | "Building Materials" | "Business Supplies/Equipment" | "Capital Markets/Hedge Fund/Private Equity" | "Chemicals" | "Civic/Social Organization" | "Civil Engineering" | "Commercial Real Estate" | "Computer Games" | "Computer Hardware" | "Computer Networking" | "Computer Software/Engineering" | "Computer/Network Security" | "Construction" | "Consumer Electronics" | "Consumer Goods" | "Consumer Services" | "Cosmetics" | "Dairy" | "Defense/Space" | "Design" | "E-Learning" | "Education Management" | "Electrical/Electronic Manufacturing" | "Entertainment/Movie Production" | "Environmental Services" | "Events Services" | "Executive Office" | "Facilities Services" | "Farming" | "Financial Services" | "Fine Art" | "Fishery" | "Food Production" | "Food/Beverages" | "Fundraising" | "Furniture" | "Gambling/Casinos" | "Glass/Ceramics/Concrete" | "Government Administration" | "Government Relations" | "Graphic Design/Web Design" | "Health/Fitness" | "Higher Education/Acadamia" | "Hospital/Health Care" | "Hospitality" | "Human Resources/HR" | "Import/Export" | "Individual/Family Services" | "Industrial Automation" | "Information Services" | "Information Technology/IT" | "Insurance" | "International Affairs" | "International Trade/Development" | "Internet" | "Investment Banking/Venture" | "Investment Management/Hedge Fund/Private Equity" | "Judiciary" | "Law Enforcement" | "Law Practice/Law Firms" | "Legal Services" | "Legislative Office" | "Leisure/Travel" | "Library" | "Logistics/Procurement" | "Luxury Goods/Jewelry" | "Machinery" | "Management Consulting" | "Maritime" | "Market Research" | "Marketing/Advertising/Sales" | "Mechanical or Industrial Engineering" | "Media Production" | "Medical Equipment" | "Medical Practice" | "Mental Health Care" | "Military Industry" | "Mining/Metals" | "Motion Pictures/Film" | "Museums/Institutions" | "Music" | "Nanotechnology" | "Newspapers/Journalism" | "Non-Profit/Volunteering" | "Oil/Energy/Solar/Greentech" | "Online Publishing" | "Outsourcing/Offshoring" | "Package/Freight Delivery" | "Packaging/Containers" | "Paper/Forest Products" | "Performing Arts" | "Pharmaceuticals" | "Philanthropy" | "Photography" | "Plastics" | "Political Organization" | "Primary/Secondary Education" | "Printing" | "Professional Training" | "Program Development" | "Public Relations/PR" | "Public Safety" | "Publishing Industry" | "Railroad Manufacture" | "Ranching" | "Real Estate/Mortgage" | "Recreational Facilities/Services" | "Religious Institutions" | "Renewables/Environment" | "Research Industry" | "Restaurants" | "Retail Industry" | "Security/Investigations" | "Semiconductors" | "Shipbuilding" | "Sporting Goods" | "Sports" | "Staffing/Recruiting" | "Supermarkets" | "Telecommunications" | "Textiles" | "Think Tanks" | "Tobacco" | "Translation/Localization" | "Transportation" | "Utilities" | "Venture Capital/VC" | "Veterinary" | "Warehousing" | "Wholesale" | "Wine/Spirits" | "Wireless" | "Writing/Editing" | "Other";
    /**
     * @description * `F` - Future Constructors
     * * `L` - Learning
     * * `W` - Work
     * * `H` - Health and Well-Being
     * * `S` - Smart Cities and Sustainability
     * * `C` - Community Hacks
     * @enum {string}
     */
    IntendedTracksEnum: "F" | "L" | "W" | "H" | "S" | "C";
    LightHouse: {
      /** Format: uuid */
      id: string;
      table: number;
      ip_address: string;
      mentor_requested?: components["schemas"]["MentorRequestedEnum"];
      announcement_pending?: components["schemas"]["AnnouncementPendingEnum"];
    };
    Location: {
      /** Format: uuid */
      id: string;
      building: string;
      room?: components["schemas"]["RoomEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    MentorHelpRequest: {
      /** Format: uuid */
      id: string;
      title?: string | null;
      description?: string | null;
      /** Format: uuid */
      team: string;
      category?: components["schemas"]["CategoryEnum"] | components["schemas"]["NullEnum"] | null;
      topic: components["schemas"]["TopicEnum"][];
      /** Format: uuid */
      reporter?: string | null;
      /** Format: uuid */
      mentor?: string | null;
      status?: components["schemas"]["Status130Enum"];
      category_specialty?: string | null;
      topic_other?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    MentorHelpRequestHistory: {
      history_id: number;
      /** Format: uuid */
      id: string;
      title?: string | null;
      description?: string | null;
      /** Format: uuid */
      team?: string | null;
      category?: components["schemas"]["CategoryEnum"] | components["schemas"]["NullEnum"] | null;
      topic: components["schemas"]["TopicEnum"][];
      /** Format: uuid */
      reporter?: string | null;
      /** Format: uuid */
      mentor?: string | null;
      status?: components["schemas"]["Status130Enum"];
      category_specialty?: string | null;
      topic_other?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `R` - Requested
     * * `A` - Acknowledged
     * * `E` - En Route
     * * `F` - Resolved
     * @enum {string}
     */
    MentorRequestedEnum: "R" | "A" | "E" | "F";
    /** @enum {unknown} */
    NullEnum: "";
    /**
     * @description * `S` - Student
     * * `P` - Professional
     * * `H` - Hobbyist
     * @enum {string}
     */
    ParticipationCapacityEnum: "S" | "P" | "H";
    /**
     * @description * `P` - Participant
     * * `M` - Mentor
     * * `J` - Judge
     * * `S` - Sponsor
     * * `V` - Volunteer
     * * `O` - Organizer
     * * `G` - Guardian
     * * `E` - Media
     * @enum {string}
     */
    ParticipationClassD2aEnum: "P" | "M" | "J" | "S" | "V" | "O" | "G" | "E";
    /**
     * @description * `R` - RSVP'd
     * * `C` - Confirmed
     * * `I` - Instructor
     * * `V` - Volunteer
     * @enum {string}
    */
    // TODO: move to RSVP
    // disabilities?: components["schemas"]["DisabilitiesEnum"][];
    // disabilities_other?: string | null;
    // disability_accommodations?: string | null;
    ParticipationEnum: "R" | "C" | "I" | "V";
    /**
     * @description * `A` - Digital Designer
     * * `D` - Developer
     * * `S` - Domain or other Specialized Skill Expert
     * * `P` - Project Manager
     * @enum {string}
     */
    ParticipationRoleEnum: "A" | "D" | "S" | "P";
    PatchedApplication: {
      /** Format: uuid */
      id?: string;
      gender_identity?: components["schemas"]["GenderIdentityEnum"][];
      nationality?: components["schemas"]["UsVisaSupportCitizenshipEnum"][];
      current_country?: components["schemas"]["UsVisaSupportCitizenshipEnum"][];
      race_ethnic_group?: components["schemas"]["RaceEthnicGroupEnum"][];
      previous_participation?: components["schemas"]["PreviousParticipationEnum"][];
      heard_about_us?: components["schemas"]["HeardAboutUsEnum"][];
      digital_designer_skills?: components["schemas"]["DigitalDesignerSkillsEnum"][];
      industry?: components["schemas"]["IndustryEnum"][];
      first_name?: string;
      middle_name?: string | null;
      last_name?: string;
      participation_class?: components["schemas"]["ApplicationParticipationClassEnum"];
      current_city?: string | null;
      pronouns?: string | null;
      age_group?: components["schemas"]["AgeGroupEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: email */
      email?: string;
      event_year?: number;
      /** Format: uri */
      portfolio?: string | null;
      /** Format: uri */
      secondary_portfolio?: string | null;
      gender_identity_other?: string | null;
      race_ethnic_group_other?: string | null;
      disability_identity?: components["schemas"]["DisabilityIdentityEnum"] | components["schemas"]["NullEnum"] | null;
      participation_capacity?: components["schemas"]["ParticipationCapacityEnum"] | components["schemas"]["NullEnum"] | null;
      student_school?: string | null;
      student_field_of_study?: string | null;
      occupation?: string | null;
      employer?: string | null;
      industry_other?: string | null;
      specialized_expertise?: string | null;
      status?: components["schemas"]["ApplicationStatusEnum"] | components["schemas"]["NullEnum"] | null;
      previously_participated?: boolean | null;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      experience_with_xr?: string | null;
      experience_contribution?: string | null;
      theme_essay?: string | null;
    //   theme_essay_follow_up?: string | null;
      theme_interest_track_one?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      theme_interest_track_two?: components["schemas"]["ThemeInterestTrackChoiceEnum"];
      theme_detail_one?: string | null;
      theme_detail_two?: string | null;
      theme_detail_three?: string | null;
      hardware_hack_interest?: components["schemas"]["HardwareHackInterestEnum"];
      heard_about_us_other?: string | null;
      digital_designer_skills_other?: string | null;
      communications_platform_username?: string | null;
      outreach_groups?: string | null;
      /** Format: date-time */
      submitted_at?: string;
      /** Format: date-time */
      updated_at?: string;
      mentor_qualified_fields?: string | null;
      mentor_mentoring_steps?: string | null;
      mentor_previously_mentored?: boolean | null;
      judge_judging_steps?: string | null;
      judge_invited_by?: string | null;
      judge_previously_judged?: boolean | null;
      /** Format: date-time */
      rsvp_email_sent_at?: string | null;
      /** Format: uuid */
      resume?: string | null;
    };
    PatchedAttendeePatch: {
      /** Format: uuid */
      id?: string;
      first_name?: string;
      last_name?: string;
      authentication_id?: string | null;
      /** Format: uuid */
      profile_image?: string | null;
      bio?: string;
      /** Format: date-time */
      checked_in_at?: string | null;
      prefers_destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"][];
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      /** Format: email */
      email?: string;
      sponsor_company?: string | null;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      initial_setup?: boolean;
      guardian_of?: string[];
      /** Format: uuid */
      sponsor_handler?: string | null;
      intended_tracks?: components["schemas"]["IntendedTracksEnum"][];
      intended_hardware_hack?: boolean;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedAttendeePreference: {
      /** Format: uuid */
      id?: string;
      preference?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"];
      /** Format: uuid */
      preferer?: string;
      /** Format: uuid */
      preferee?: string;
    };
    PatchedAttendeeRSVP: {
      /** Format: uuid */
      id?: string;
      first_name?: string;
      last_name?: string;
      participation_role?: components["schemas"]["ParticipationRoleEnum"] | components["schemas"]["NullEnum"] | null;
      /** Format: uuid */
      profile_image?: string | null;
      initial_setup?: boolean;
      guardian_of?: string[];
      /** Format: uuid */
      sponsor_handler?: string | null;
      /** Format: uuid */
      application?: string | null;
      bio?: string;
      /** Format: email */
      email?: string;
      shirt_size?: components["schemas"]["ShirtSizeEnum"] | components["schemas"]["NullEnum"] | null;
      /** @description I.e., a Discord username */
      communications_platform_username?: string | null;
      dietary_restrictions?: components["schemas"]["DietaryRestrictionsEnum"][];
      dietary_restrictions_other?: string | null;
      dietary_allergies?: components["schemas"]["DietaryAllergiesEnum"][];
      dietary_allergies_other?: string | null;
      additional_accommodations?: string | null;
      /** Format: date-time */
      checked_in_at?: string | null;
      us_visa_support_is_required?: boolean;
      us_visa_letter_of_invitation_required?: boolean | null;
      us_visa_support_full_name?: string | null;
      us_visa_support_document_number?: string | null;
      us_visa_support_national_identification_document_type?: components["schemas"]["UsVisaSupportNationalIdentificationDocumentTypeEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_citizenship?: components["schemas"]["UsVisaSupportCitizenshipEnum"] | components["schemas"]["NullEnum"] | null;
      us_visa_support_address?: string | null;
      /** @description Will you be under 18 on January 23, 2025 */
      under_18_by_date?: boolean | null;
      parental_consent_form_signed?: boolean | null;
      agree_to_media_release?: boolean;
      agree_to_liability_release?: boolean;
      agree_to_rules_code_of_conduct?: boolean;
      emergency_contact_name?: string;
      personal_phone_number?: string;
      emergency_contact_phone_number?: string;
      /** Format: email */
      emergency_contact_email?: string;
      emergency_contact_relationship?: string;
      special_track_snapdragon_spaces_interest?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"] | components["schemas"]["NullEnum"] | null;
      special_track_future_constructors_interest?: components["schemas"]["SpecialTrackFutureConstructorsInterestEnum"] | components["schemas"]["NullEnum"] | null;
      /** @description Do you already have an AR or VR app in any store? And if so, which store(s)? */
      app_in_store?: string | null;
      currently_build_for_xr?: string | null;
      currently_use_xr?: string | null;
      non_xr_talents?: string | null;
      ar_vr_ap_in_store?: string | null;
      reality_hack_project_to_product?: boolean;
      participation_class?: components["schemas"]["ParticipationClassD2aEnum"];
      sponsor_company?: string | null;
    };
    PatchedDestinyTeamAttendeeVibe: {
      /** Format: uuid */
      id?: string;
      vibe?: number;
      /** Format: uuid */
      destiny_team?: string;
      /** Format: uuid */
      attendee?: string;
    };
    PatchedDestinyTeamUpdate: {
      /** Format: uuid */
      id?: string;
      table?: components["schemas"]["TableNumber"];
      track?: components["schemas"]["TrackEnum"] | components["schemas"]["NullEnum"] | null;
      round?: number;
      hardware_hack?: boolean;
      destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"] | components["schemas"]["BlankEnum"];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      attendees?: string[];
    };
    PatchedFileUpload: {
      /** Format: uuid */
      id?: string;
      /** Format: uri */
      file?: string;
      claimed?: boolean;
      /** Format: date-time */
      created_at?: string;
    };
    PatchedGroupDetail: {
      id?: number;
      name?: string;
      permissions?: number[];
    };
    PatchedHardwareCreate: {
      /** Format: uuid */
      id?: string;
      name?: string;
      description?: string;
      /** Format: uuid */
      image?: string | null;
      tags?: components["schemas"]["TagsEnum"][];
      relates_to_destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"] | components["schemas"]["NullEnum"] | null;
    };
    PatchedHardwareDevice: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      hardware?: string;
      serial?: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedHardwareDeviceHistory: {
      history_id?: number;
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      hardware?: string | null;
      serial?: string;
      /** Format: uuid */
      checked_out_to?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedHardwareRequest: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      hardware?: string;
      /** Format: uuid */
      hardware_device?: string | null;
      /** Format: uuid */
      requester?: string | null;
      /** Format: uuid */
      team?: string | null;
      reason?: string;
      status?: components["schemas"]["StatusB9cEnum"];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedLocation: {
      /** Format: uuid */
      id?: string;
      building?: string;
      room?: components["schemas"]["RoomEnum"];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedMentorHelpRequest: {
      /** Format: uuid */
      id?: string;
      title?: string | null;
      description?: string | null;
      /** Format: uuid */
      team?: string;
      category?: components["schemas"]["CategoryEnum"] | components["schemas"]["NullEnum"] | null;
      topic?: components["schemas"]["TopicEnum"][];
      /** Format: uuid */
      reporter?: string | null;
      /** Format: uuid */
      mentor?: string | null;
      status?: components["schemas"]["Status130Enum"];
      category_specialty?: string | null;
      topic_other?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedMentorHelpRequestHistory: {
      history_id?: number;
      /** Format: uuid */
      id?: string;
      title?: string | null;
      description?: string | null;
      /** Format: uuid */
      team?: string | null;
      category?: components["schemas"]["CategoryEnum"] | components["schemas"]["NullEnum"] | null;
      topic?: components["schemas"]["TopicEnum"][];
      /** Format: uuid */
      reporter?: string | null;
      /** Format: uuid */
      mentor?: string | null;
      status?: components["schemas"]["Status130Enum"];
      category_specialty?: string | null;
      topic_other?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedProject: {
      /** Format: uuid */
      id?: string;
      name?: string;
      /** Format: uri */
      repository_location?: string;
      description?: string;
      /** Format: uri */
      submission_location?: string;
      /** Format: uuid */
      team?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedSkill: {
      /** Format: uuid */
      id?: string;
      name?: string;
    };
    PatchedSkillProficiencyCreate: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      skill?: string;
      proficiency?: components["schemas"]["ProficiencyEnum"];
      /** Format: uuid */
      attendee?: string | null;
    };
    PatchedTable: {
      /** Format: uuid */
      id?: string;
      /** Format: int64 */
      number?: number;
      /** Format: uuid */
      location?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedTeam: {
      /** Format: uuid */
      id?: string;
      name?: string;
      attendees?: components["schemas"]["AttendeeName"][];
      table?: components["schemas"]["TableNumber"];
      track?: components["schemas"]["TrackEnum"] | components["schemas"]["NullEnum"] | null;
      destiny_hardware?: components["schemas"]["RelatesToDestinyHardwareEnum"][];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    PatchedWorkshop: {
      /** Format: uuid */
      id?: string;
      recommended_for?: components["schemas"]["RecommendedForEnum"][];
      name?: string;
      /** Format: date-time */
      datetime?: string | null;
      duration?: number | null;
      description?: string | null;
      /** Format: uri */
      course_materials?: string | null;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      /** Format: uuid */
      location?: string | null;
      skills?: string[];
      hardware?: string[];
    };
    PatchedWorkshopAttendee: {
      /** Format: uuid */
      id?: string;
      participation?: components["schemas"]["ParticipationEnum"];
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
      /** Format: uuid */
      workshop?: string;
      /** Format: uuid */
      attendee?: string;
    };
    /**
     * @description * `A` - 2016
     * * `B` - 2017
     * * `C` - 2018
     * * `D` - 2019
     * * `E` - 2020
     * * `F` - 2022
     * * `G` - 2023
     * * `H` - 2024
     * @enum {string}
     */
    PreviousParticipationEnum: "A" | "B" | "C" | "D" | "E" | "F" | "G";
    /**
     * @description * `N` - Novice
     * * `C` - Competent
     * * `P` - Proficient
     * * `M` - Master
     * @enum {string}
     */
    ProficiencyEnum: "N" | "C" | "P" | "M";
    Project: {
      /** Format: uuid */
      id: string;
      name: string;
      /** Format: uri */
      repository_location: string;
      description: string;
      /** Format: uri */
      submission_location: string;
      /** Format: uuid */
      team?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * `A` - Asian, Asian American, or of Asian descent
     * @description * 
     * * `B` - Black, African American, or of African descent
     * * `C` - Hispanic, Latino, Latina, Latinx, or of Latinx or Spanish-speaking descent
     * * `D` - Middle Eastern, North African, or of North African descent
     * * `E` - Native American, American Indian, Alaska Native, or Indigenous
     * * `F` - Pacific Islander or Native Hawaiian
     * * `G` - White or of European descent
     * * `H` - Multi-racial or multi-ethnic
     * * `I` - I prefer not to say
     * * `J` - East Asian
     * * `K` - South Asian
     * * `L` - Southeast Asian
     * * `M` - Central Asian
     * * `O` - Other
     * @enum {string}
     */
    RaceEthnicGroupEnum: "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "O" | "J" | "K" | "L" | "M";
    /**
     * @description * `A` - Digital Designer
     * * `D` - Developer
     * * `S` - Domain or other Specialized Skill Expert
     * * `P` - Project Manager
     * @enum {string}
     */
    RecommendedForEnum: "A" | "D" | "S" | "P";
    /**
     * @description * `H` - Hardware Hack
     * * `M` - Meta
     * * `Q` - Snapdragon Spaces
     * * `X` - XREAL
     * * `S` - Snap Spectacles
     * @enum {string}
     */
    RelatesToDestinyHardwareEnum: "H" | "M" | "Q" | "X" | "S";
    /**
     * @description * `MH` - Main Hall
     * * `AT` - Atlantis
     * @enum {string}
     */
    RoomEnum: "MH" | "AT";
    /**
     * @description * `1` - XS
     * * `2` - S
     * * `3` - M
     * * `4` - L
     * * `5` - XL
     * * `6` - XXL
     * @enum {string}
     */
    ShirtSizeEnum: "1" | "2" | "3" | "4" | "5" | "6";
    Skill: {
      /** Format: uuid */
      id: string;
      name: string;
    };
    SkillProficiency: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      skill: string;
      proficiency?: components["schemas"]["ProficiencyEnum"];
      /** Format: uuid */
      attendee: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    SkillProficiencyCreate: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      skill: string;
      proficiency?: components["schemas"]["ProficiencyEnum"];
      /** Format: uuid */
      attendee: string | null;
    };
    SkillProficiencyDetail: {
      /** Format: uuid */
      id: string;
      skill: components["schemas"]["Skill"];
      proficiency?: components["schemas"]["ProficiencyEnum"];
      attendee: components["schemas"]["Attendee"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    /**
     * @description * `Y` - Yay
     * * `N` - Nay
     * @enum {string}
     */
    SpecialTrackFutureConstructorsInterestEnum: "Y" | "N";
    /**
     * @description * `R` - Requested
     * * `A` - Acknowledged
     * * `E` - En Route
     * * `F` - Resolved
     * @enum {string}
     */
    Status130Enum: "R" | "A" | "E" | "F";
    /**
     * @description * `P` - Pending
     * * `A` - Approved
     * * `R` - Rejected
     * * `C` - Checked out
     * @enum {string}
     */
    StatusB9cEnum: "P" | "A" | "R" | "C";
    Table: {
      /** Format: uuid */
      id: string;
      /** Format: int64 */
      number: number;
      /** Format: uuid */
      location?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    TableCreate: {
      /** Format: uuid */
      id: string;
      /** Format: int64 */
      number: number;
      /** Format: uuid */
      location?: string | null;
    };
    TableNumber: {
      /** Format: uuid */
      id: string;
      /** Format: int64 */
      number: number;
    };
    /**
     * @description * `AC` - AC
     * * `SE` - SE
     * * `VR` - VR
     * * `AR` - AR
     * * `MR` - MR
     * * `CO` - CO
     * * `HA` - HA
     * * `CA` - CA
     * * `TA` - TA
     * * `HD` - HD
     * @enum {string}
     */
    TagsEnum: "AC" | "SE" | "VR" | "AR" | "MR" | "CO" | "HA" | "CA" | "TA" | "HD";
    Team: {
      /** Format: uuid */
      id: string;
      name: string;
      attendees: components["schemas"]["AttendeeName"][];
      table: components["schemas"]["TableNumber"];
      track?: components["schemas"]["TrackEnum"] | components["schemas"]["NullEnum"] | null;
      destiny_hardware: components["schemas"]["RelatesToDestinyHardwareEnum"][];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
    };
    TeamCreate: {
      /** Format: uuid */
      id: string;
      name: string;
      attendees?: string[];
      /** Format: uuid */
      table?: string | null;
    };
    TokenObtainPair: {
      username: string;
      password: string;
      access: string;
      refresh: string;
    };
    TokenRefresh: {
      access: string;
      refresh: string;
    };
    TokenVerify: {
      token: string;
    };
    /**
     * @description * `1` - Development and Programming
     * * `2` - Unity Timeline Animations
     * * `3` - Embedded Systems (C)
     * * `4` - Embedded Systems (Python)
     * * `5` - C++ Android JavaScript
     * * `6` - Backend Development
     * * `7` - Unreal App Development
     * * `8` - Unreal Blueprints
     * * `9` - Unity AR Foundation
     * * `10` - WebXR
     * * `11` - Lens Studio
     * * `12` - Meta Spark
     * * `13` - Virtual Reality
     * * `14` - Augmented Reality
     * * `15` - Mixed Reality
     * * `16` - Mixed Reality Toolkit
     * * `17` - Meta XR SDK
     * * `18` - C#
     * * `19` - Regression Testing
     * * `20` - OOP Design Patterns
     * * `21` - Distributed Computing
     * * `22` - Cybersecurity
     * * `23` - Swift SwiftUI ARKit
     * * `24` - Software Builds
     * * `25` - Containers
     * * `26` - Deployment Automation
     * * `27` - Site-reliability engineering (SRE) Work
     * * `28` - Python Shell Scripting
     * * `29` - Search Implementation
     * * `30` - Generative AI
     * * `31` - IoT
     * * `32` - 3D Rendering
     * * `33` - Video Encoding
     * * `34` - Linux OS Configuration
     * * `35` - Cross-platform Work
     * * `36` - Web Frontend/Backend
     * * `37` - Project Scope
     * * `38` - Technical Approach
     * * `39` - App-driven Architecture
     * * `40` - Problem-solving
     * * `41` - Design and Prototyping
     * * `42` - ShapesXR
     * * `43` - Figma
     * * `44` - Miro
     * * `45` - Adobe Creative Suite
     * * `46` - Mocap
     * * `47` - 3D Stereoscopic Recording
     * * `48` - Mobile AR
     * * `49` - 3D Modeling
     * * `50` - Animation
     * * `51` - Motion Capture
     * * `52` - XR Design Execution
     * * `53` - Interactive Learning Programs
     * * `54` - Computer Vision
     * * `55` - Graphics Shaders
     * * `56` - Git
     * * `57` - XR/AR VR Expert
     * * `58` - Storytelling
     * * `59` - Visual Design
     * * `60` - Prototyping
     * * `61` - Analog Painting
     * * `62` - Drawing
     * * `63` - Sculpture
     * * `64` - Project Management and Leadership
     * * `65` - Producer
     * * `66` - Peace-maker Conflict Resolution
     * * `67` - Storyteller
     * * `68` - Project Management
     * * `69` - Agile Scrum
     * * `70` - Conflict Resolution
     * * `71` - Communication
     * * `72` - Digital Experience Production
     * * `73` - User Flow Design
     * * `74` - Hardware Development (Arduino)
     * * `75` - Hardware Development (Esp32)
     * * `76` - Hardware Development (Raspberry Pi)
     * * `77` - Innovation and Specialized Expertise
     * * `78` - Biometrics in VR
     * * `79` - Brain-Computer Interface (BCI)
     * * `80` - Game Design
     * * `81` - Lens Studio Projects
     * * `82` - Snap Lens
     * * `83` - 8thWall Expertise
     * * `84` - Web Development
     * * `85` - Blockchain
     * * `86` - Networking
     * * `87` - .NET
     * * `O` - Other
     * @enum {string}
     */
    TopicEnum: "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17" | "18" | "19" | "20" | "21" | "22" | "23" | "24" | "25" | "26" | "27" | "28" | "29" | "30" | "31" | "32" | "33" | "34" | "35" | "36" | "37" | "38" | "39" | "40" | "41" | "42" | "43" | "44" | "45" | "46" | "47" | "48" | "49" | "50" | "51" | "52" | "53" | "54" | "55" | "56" | "57" | "58" | "59" | "60" | "61" | "62" | "63" | "64" | "65" | "66" | "67" | "68" | "69" | "70" | "71" | "72" | "73" | "74" | "75" | "76" | "77" | "78" | "79" | "80" | "81" | "82" | "83" | "84" | "85" | "86" | "87" | "O";
    /**
     * @description * `F` - Future Constructors
     * * `L` - Learning
     * * `W` - Work
     * * `H` - Health and Well-Being
     * * `S` - Smart Cities and Sustainability
     * * `C` - Community Hacks
     * @enum {string}
     */
    TrackEnum: "F" | "L" | "W" | "H" | "S" | "C";
    /**
     * @description * `AW` - Aruba
     * * `AF` - Afghanistan
     * * `AO` - Angola
     * * `AI` - Anguilla
     * * `AX` - Åland Islands
     * * `AL` - Albania
     * * `AD` - Andorra
     * * `AE` - United Arab Emirates
     * * `AR` - Argentina
     * * `AM` - Armenia
     * * `AS` - American Samoa
     * * `AQ` - Antarctica
     * * `TF` - French Southern Territories
     * * `AG` - Antigua and Barbuda
     * * `AU` - Australia
     * * `AT` - Austria
     * * `AZ` - Azerbaijan
     * * `BI` - Burundi
     * * `BE` - Belgium
     * * `BJ` - Benin
     * * `BQ` - Bonaire, Sint Eustatius and Saba
     * * `BF` - Burkina Faso
     * * `BD` - Bangladesh
     * * `BG` - Bulgaria
     * * `BH` - Bahrain
     * * `BS` - Bahamas
     * * `BA` - Bosnia and Herzegovina
     * * `BL` - Saint Barthélemy
     * * `BY` - Belarus
     * * `BZ` - Belize
     * * `BM` - Bermuda
     * * `BO` - Bolivia, Plurinational State of
     * * `BR` - Brazil
     * * `BB` - Barbados
     * * `BN` - Brunei Darussalam
     * * `BT` - Bhutan
     * * `BV` - Bouvet Island
     * * `BW` - Botswana
     * * `CF` - Central African Republic
     * * `CA` - Canada
     * * `CC` - Cocos (Keeling) Islands
     * * `CH` - Switzerland
     * * `CL` - Chile
     * * `CN` - China
     * * `CI` - Côte d'Ivoire
     * * `CM` - Cameroon
     * * `CD` - Congo, The Democratic Republic of the
     * * `CG` - Congo
     * * `CK` - Cook Islands
     * * `CO` - Colombia
     * * `KM` - Comoros
     * * `CV` - Cabo Verde
     * * `CR` - Costa Rica
     * * `CU` - Cuba
     * * `CW` - Curaçao
     * * `CX` - Christmas Island
     * * `KY` - Cayman Islands
     * * `CY` - Cyprus
     * * `CZ` - Czechia
     * * `DE` - Germany
     * * `DJ` - Djibouti
     * * `DM` - Dominica
     * * `DK` - Denmark
     * * `DO` - Dominican Republic
     * * `DZ` - Algeria
     * * `EC` - Ecuador
     * * `EG` - Egypt
     * * `ER` - Eritrea
     * * `EH` - Western Sahara
     * * `ES` - Spain
     * * `EE` - Estonia
     * * `ET` - Ethiopia
     * * `FI` - Finland
     * * `FJ` - Fiji
     * * `FK` - Falkland Islands (Malvinas)
     * * `FR` - France
     * * `FO` - Faroe Islands
     * * `FM` - Micronesia, Federated States of
     * * `GA` - Gabon
     * * `GB` - United Kingdom
     * * `GE` - Georgia
     * * `GG` - Guernsey
     * * `GH` - Ghana
     * * `GI` - Gibraltar
     * * `GN` - Guinea
     * * `GP` - Guadeloupe
     * * `GM` - Gambia
     * * `GW` - Guinea-Bissau
     * * `GQ` - Equatorial Guinea
     * * `GR` - Greece
     * * `GD` - Grenada
     * * `GL` - Greenland
     * * `GT` - Guatemala
     * * `GF` - French Guiana
     * * `GU` - Guam
     * * `GY` - Guyana
     * * `HK` - Hong Kong
     * * `HM` - Heard Island and McDonald Islands
     * * `HN` - Honduras
     * * `HR` - Croatia
     * * `HT` - Haiti
     * * `HU` - Hungary
     * * `ID` - Indonesia
     * * `IM` - Isle of Man
     * * `IN` - India
     * * `IO` - British Indian Ocean Territory
     * * `IE` - Ireland
     * * `IR` - Iran, Islamic Republic of
     * * `IQ` - Iraq
     * * `IS` - Iceland
     * * `IL` - Israel
     * * `IT` - Italy
     * * `JM` - Jamaica
     * * `JE` - Jersey
     * * `JO` - Jordan
     * * `JP` - Japan
     * * `KZ` - Kazakhstan
     * * `KE` - Kenya
     * * `KG` - Kyrgyzstan
     * * `KH` - Cambodia
     * * `KI` - Kiribati
     * * `KN` - Saint Kitts and Nevis
     * * `KR` - Korea, Republic of
     * * `KW` - Kuwait
     * * `LA` - Lao People's Democratic Republic
     * * `LB` - Lebanon
     * * `LR` - Liberia
     * * `LY` - Libya
     * * `LC` - Saint Lucia
     * * `LI` - Liechtenstein
     * * `LK` - Sri Lanka
     * * `LS` - Lesotho
     * * `LT` - Lithuania
     * * `LU` - Luxembourg
     * * `LV` - Latvia
     * * `MO` - Macao
     * * `MF` - Saint Martin (French part)
     * * `MA` - Morocco
     * * `MC` - Monaco
     * * `MD` - Moldova, Republic of
     * * `MG` - Madagascar
     * * `MV` - Maldives
     * * `MX` - Mexico
     * * `MH` - Marshall Islands
     * * `MK` - North Macedonia
     * * `ML` - Mali
     * * `MT` - Malta
     * * `MM` - Myanmar
     * * `ME` - Montenegro
     * * `MN` - Mongolia
     * * `MP` - Northern Mariana Islands
     * * `MZ` - Mozambique
     * * `MR` - Mauritania
     * * `MS` - Montserrat
     * * `MQ` - Martinique
     * * `MU` - Mauritius
     * * `MW` - Malawi
     * * `MY` - Malaysia
     * * `YT` - Mayotte
     * * `NA` - Namibia
     * * `NC` - New Caledonia
     * * `NE` - Niger
     * * `NF` - Norfolk Island
     * * `NG` - Nigeria
     * * `NI` - Nicaragua
     * * `NU` - Niue
     * * `NL` - Netherlands
     * * `NO` - Norway
     * * `NP` - Nepal
     * * `NR` - Nauru
     * * `NZ` - New Zealand
     * * `OM` - Oman
     * * `PK` - Pakistan
     * * `PA` - Panama
     * * `PN` - Pitcairn
     * * `PE` - Peru
     * * `PH` - Philippines
     * * `PW` - Palau
     * * `PG` - Papua New Guinea
     * * `PL` - Poland
     * * `PR` - Puerto Rico
     * * `KP` - Korea, Democratic People's Republic of
     * * `PT` - Portugal
     * * `PY` - Paraguay
     * * `PS` - Palestine, State of
     * * `PF` - French Polynesia
     * * `QA` - Qatar
     * * `RE` - Réunion
     * * `RO` - Romania
     * * `RU` - Russian Federation
     * * `RW` - Rwanda
     * * `SA` - Saudi Arabia
     * * `SD` - Sudan
     * * `SN` - Senegal
     * * `SG` - Singapore
     * * `GS` - South Georgia and the South Sandwich Islands
     * * `SH` - Saint Helena, Ascension and Tristan da Cunha
     * * `SJ` - Svalbard and Jan Mayen
     * * `SB` - Solomon Islands
     * * `SL` - Sierra Leone
     * * `SV` - El Salvador
     * * `SM` - San Marino
     * * `SO` - Somalia
     * * `PM` - Saint Pierre and Miquelon
     * * `RS` - Serbia
     * * `SS` - South Sudan
     * * `ST` - Sao Tome and Principe
     * * `SR` - Suriname
     * * `SK` - Slovakia
     * * `SI` - Slovenia
     * * `SE` - Sweden
     * * `SZ` - Eswatini
     * * `SX` - Sint Maarten (Dutch part)
     * * `SC` - Seychelles
     * * `SY` - Syrian Arab Republic
     * * `TC` - Turks and Caicos Islands
     * * `TD` - Chad
     * * `TG` - Togo
     * * `TH` - Thailand
     * * `TJ` - Tajikistan
     * * `TK` - Tokelau
     * * `TM` - Turkmenistan
     * * `TL` - Timor-Leste
     * * `TO` - Tonga
     * * `TT` - Trinidad and Tobago
     * * `TN` - Tunisia
     * * `TR` - Turkey
     * * `TV` - Tuvalu
     * * `TW` - Taiwan, Province of China
     * * `TZ` - Tanzania, United Republic of
     * * `UG` - Uganda
     * * `UA` - Ukraine
     * * `UM` - United States Minor Outlying Islands
     * * `UY` - Uruguay
     * * `US` - United States
     * * `UZ` - Uzbekistan
     * * `VA` - Holy See (Vatican City State)
     * * `VC` - Saint Vincent and the Grenadines
     * * `VE` - Venezuela, Bolivarian Republic of
     * * `VG` - Virgin Islands, British
     * * `VI` - Virgin Islands, U.S.
     * * `VN` - Viet Nam
     * * `VU` - Vanuatu
     * * `WF` - Wallis and Futuna
     * * `WS` - Samoa
     * * `YE` - Yemen
     * * `ZA` - South Africa
     * * `ZM` - Zambia
     * * `ZW` - Zimbabwe
     * @enum {string}
     */
    UsVisaSupportCitizenshipEnum: "AW" | "AF" | "AO" | "AI" | "AX" | "AL" | "AD" | "AE" | "AR" | "AM" | "AS" | "AQ" | "TF" | "AG" | "AU" | "AT" | "AZ" | "BI" | "BE" | "BJ" | "BQ" | "BF" | "BD" | "BG" | "BH" | "BS" | "BA" | "BL" | "BY" | "BZ" | "BM" | "BO" | "BR" | "BB" | "BN" | "BT" | "BV" | "BW" | "CF" | "CA" | "CC" | "CH" | "CL" | "CN" | "CI" | "CM" | "CD" | "CG" | "CK" | "CO" | "KM" | "CV" | "CR" | "CU" | "CW" | "CX" | "KY" | "CY" | "CZ" | "DE" | "DJ" | "DM" | "DK" | "DO" | "DZ" | "EC" | "EG" | "ER" | "EH" | "ES" | "EE" | "ET" | "FI" | "FJ" | "FK" | "FR" | "FO" | "FM" | "GA" | "GB" | "GE" | "GG" | "GH" | "GI" | "GN" | "GP" | "GM" | "GW" | "GQ" | "GR" | "GD" | "GL" | "GT" | "GF" | "GU" | "GY" | "HK" | "HM" | "HN" | "HR" | "HT" | "HU" | "ID" | "IM" | "IN" | "IO" | "IE" | "IR" | "IQ" | "IS" | "IL" | "IT" | "JM" | "JE" | "JO" | "JP" | "KZ" | "KE" | "KG" | "KH" | "KI" | "KN" | "KR" | "KW" | "LA" | "LB" | "LR" | "LY" | "LC" | "LI" | "LK" | "LS" | "LT" | "LU" | "LV" | "MO" | "MF" | "MA" | "MC" | "MD" | "MG" | "MV" | "MX" | "MH" | "MK" | "ML" | "MT" | "MM" | "ME" | "MN" | "MP" | "MZ" | "MR" | "MS" | "MQ" | "MU" | "MW" | "MY" | "YT" | "NA" | "NC" | "NE" | "NF" | "NG" | "NI" | "NU" | "NL" | "NO" | "NP" | "NR" | "NZ" | "OM" | "PK" | "PA" | "PN" | "PE" | "PH" | "PW" | "PG" | "PL" | "PR" | "KP" | "PT" | "PY" | "PS" | "PF" | "QA" | "RE" | "RO" | "RU" | "RW" | "SA" | "SD" | "SN" | "SG" | "GS" | "SH" | "SJ" | "SB" | "SL" | "SV" | "SM" | "SO" | "PM" | "RS" | "SS" | "ST" | "SR" | "SK" | "SI" | "SE" | "SZ" | "SX" | "SC" | "SY" | "TC" | "TD" | "TG" | "TH" | "TJ" | "TK" | "TM" | "TL" | "TO" | "TT" | "TN" | "TR" | "TV" | "TW" | "TZ" | "UG" | "UA" | "UM" | "UY" | "US" | "UZ" | "VA" | "VC" | "VE" | "VG" | "VI" | "VN" | "VU" | "WF" | "WS" | "YE" | "ZA" | "ZM" | "ZW";
    /**
     * @description * `P` - Passport
     * * `N` - National/State/Municipal ID
     * @enum {string}
     */
    UsVisaSupportNationalIdentificationDocumentTypeEnum: "P" | "N";
    Workshop: {
      /** Format: uuid */
      id: string;
      recommended_for: components["schemas"]["RecommendedForEnum"][];
      name: string;
      /** Format: date-time */
      datetime?: string | null;
      duration?: number | null;
      description?: string | null;
      /** Format: uri */
      course_materials?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: uuid */
      location?: string | null;
      skills?: string[];
      hardware?: string[];
    };
    WorkshopAttendee: {
      /** Format: uuid */
      id: string;
      participation?: components["schemas"]["ParticipationEnum"];
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: uuid */
      workshop: string;
      /** Format: uuid */
      attendee: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_list: {
    parameters: {
      query?: {
        email?: string;
        /**
         * @description * `S` - Student
         * * `P` - Professional
         * * `H` - Hobbyist
         */
        participation_capacity?: "H" | "P" | "S" | null;
        /**
         * @description * `A` - Digital Designer
         * * `D` - Developer
         * * `S` - Domain or other Specialized Skill Expert
         * * `P` - Project Manager
         */
        participation_role?: "A" | "D" | "P" | "S" | null;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"][];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Application"];
        "application/x-www-form-urlencoded": components["schemas"]["Application"];
        "multipart/form-data": components["schemas"]["Application"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Application"];
        "application/x-www-form-urlencoded": components["schemas"]["Application"];
        "multipart/form-data": components["schemas"]["Application"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows applications to be viewed or edited. */
  applications_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this application. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedApplication"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedApplication"];
        "multipart/form-data": components["schemas"]["PatchedApplication"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Application"];
        };
      };
    };
  };
  /** @description API endpoint that allows attendee preferences to be viewed or edited. */
  attendeepreferences_list: {
    parameters: {
      query?: {
        preferee?: string;
        /**
         * @description * `Y` - Yay
         * * `N` - Nay
         */
        preference?: "N" | "Y";
        preferer?: string;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeePreference"][];
        };
      };
    };
  };
  /** @description API endpoint that allows attendee preferences to be viewed or edited. */
  attendeepreferences_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AttendeePreference"];
        "application/x-www-form-urlencoded": components["schemas"]["AttendeePreference"];
        "multipart/form-data": components["schemas"]["AttendeePreference"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["AttendeePreference"];
        };
      };
    };
  };
  /** @description API endpoint that allows attendee preferences to be viewed or edited. */
  attendeepreferences_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendee preference. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeePreference"];
        };
      };
    };
  };
  /** @description API endpoint that allows attendee preferences to be viewed or edited. */
  attendeepreferences_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendee preference. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AttendeePreference"];
        "application/x-www-form-urlencoded": components["schemas"]["AttendeePreference"];
        "multipart/form-data": components["schemas"]["AttendeePreference"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeePreference"];
        };
      };
    };
  };
  /** @description API endpoint that allows attendee preferences to be viewed or edited. */
  attendeepreferences_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendee preference. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows attendee preferences to be viewed or edited. */
  attendeepreferences_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendee preference. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAttendeePreference"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAttendeePreference"];
        "multipart/form-data": components["schemas"]["PatchedAttendeePreference"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeePreference"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_list: {
    parameters: {
      query?: {
        checked_in_at?: string;
        communications_platform_username?: string;
        email?: string;
        first_name?: string;
        last_name?: string;
        /**
         * @description * `P` - Participant
         * * `M` - Mentor
         * * `J` - Judge
         * * `S` - Sponsor
         * * `V` - Volunteer
         * * `O` - Organizer
         * * `G` - Guardian
         * * `E` - Media
         */
        participation_class?: "E" | "G" | "J" | "M" | "O" | "P" | "S" | "V";
        /**
         * @description * `A` - Digital Designer
         * * `D` - Developer
         * * `S` - Domain or other Specialized Skill Expert
         * * `P` - Project Manager
         */
        participation_role?: "A" | "D" | "P" | "S" | null;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeeList"][];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Attendee"];
        "application/x-www-form-urlencoded": components["schemas"]["Attendee"];
        "multipart/form-data": components["schemas"]["Attendee"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Attendee"];
        "application/x-www-form-urlencoded": components["schemas"]["Attendee"];
        "multipart/form-data": components["schemas"]["Attendee"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  attendees_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAttendeePatch"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAttendeePatch"];
        "multipart/form-data": components["schemas"]["PatchedAttendeePatch"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeePatch"];
        };
      };
    };
  };
  /**
   * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
   *
   * - YAML: application/vnd.oai.openapi
   * - JSON: application/vnd.oai.openapi+json
   */
  auth_schema_retrieve: {
    parameters: {
      query?: {
        format?: "json" | "yaml";
        lang?: "af" | "ar" | "ar-dz" | "ast" | "az" | "be" | "bg" | "bn" | "br" | "bs" | "ca" | "ckb" | "cs" | "cy" | "da" | "de" | "dsb" | "el" | "en" | "en-au" | "en-gb" | "eo" | "es" | "es-ar" | "es-co" | "es-mx" | "es-ni" | "es-ve" | "et" | "eu" | "fa" | "fi" | "fr" | "fy" | "ga" | "gd" | "gl" | "he" | "hi" | "hr" | "hsb" | "hu" | "hy" | "ia" | "id" | "ig" | "io" | "is" | "it" | "ja" | "ka" | "kab" | "kk" | "km" | "kn" | "ko" | "ky" | "lb" | "lt" | "lv" | "mk" | "ml" | "mn" | "mr" | "ms" | "my" | "nb" | "ne" | "nl" | "nn" | "os" | "pa" | "pl" | "pt" | "pt-br" | "ro" | "ru" | "sk" | "sl" | "sq" | "sr" | "sr-latn" | "sv" | "sw" | "ta" | "te" | "tg" | "th" | "tk" | "tr" | "tt" | "udm" | "uk" | "ur" | "uz" | "vi" | "zh-hans" | "zh-hant";
      };
    };
    responses: {
      200: {
        content: {
          "application/vnd.oai.openapi": {
            [key: string]: unknown;
          };
          "application/yaml": {
            [key: string]: unknown;
          };
          "application/vnd.oai.openapi+json": {
            [key: string]: unknown;
          };
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  /**
   * @description Takes a set of user credentials and returns an access and refresh JSON web
   * token pair to prove the authentication of those credentials.
   */
  auth_token_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenObtainPair"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenObtainPair"];
        "multipart/form-data": components["schemas"]["TokenObtainPair"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenObtainPair"];
        };
      };
    };
  };
  /**
   * @description Takes a refresh type JSON web token and returns an access type JSON web
   * token if the refresh token is valid.
   */
  auth_token_refresh_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenRefresh"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenRefresh"];
        "multipart/form-data": components["schemas"]["TokenRefresh"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenRefresh"];
        };
      };
    };
  };
  /**
   * @description Takes a token and indicates if it is valid.  This view provides no
   * information about a token's fitness for a particular use.
   */
  auth_token_verify_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenVerify"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenVerify"];
        "multipart/form-data": components["schemas"]["TokenVerify"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenVerify"];
        };
      };
    };
  };
  /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
  destinyteamattendeevibes_list: {
    parameters: {
      query?: {
        attendee?: string;
        destiny_team?: string;
        destiny_team__round?: number;
        destiny_team__table__number?: number;
        /** @description A search term. */
        search?: string;
        vibe?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeamAttendeeVibe"][];
        };
      };
    };
  };
  /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
  destinyteamattendeevibes_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DestinyTeamAttendeeVibe"];
        "application/x-www-form-urlencoded": components["schemas"]["DestinyTeamAttendeeVibe"];
        "multipart/form-data": components["schemas"]["DestinyTeamAttendeeVibe"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["DestinyTeamAttendeeVibe"];
        };
      };
    };
  };
  /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
  destinyteamattendeevibes_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team attendee vibe. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeamAttendeeVibe"];
        };
      };
    };
  };
  /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
  destinyteamattendeevibes_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team attendee vibe. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DestinyTeamAttendeeVibe"];
        "application/x-www-form-urlencoded": components["schemas"]["DestinyTeamAttendeeVibe"];
        "multipart/form-data": components["schemas"]["DestinyTeamAttendeeVibe"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeamAttendeeVibe"];
        };
      };
    };
  };
  /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
  destinyteamattendeevibes_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team attendee vibe. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows Detiny team attendee vibes to be viewed or edited. */
  destinyteamattendeevibes_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team attendee vibe. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedDestinyTeamAttendeeVibe"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedDestinyTeamAttendeeVibe"];
        "multipart/form-data": components["schemas"]["PatchedDestinyTeamAttendeeVibe"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeamAttendeeVibe"];
        };
      };
    };
  };
  /** @description API endpoint that allows Destiny teams to be viewed or edited. */
  destinyteams_list: {
    parameters: {
      query?: {
        attendees?: string[];
        round?: number;
        /** @description A search term. */
        search?: string;
        table__number?: number;
        /**
         * @description * `F` - Future Constructors
         * * `L` - Learning
         * * `W` - Work
         * * `H` - Health and Well-Being
         * * `S` - Smart Cities and Sustainability
         * * `C` - Community Hacks
         */
        track?: "C" | "F" | "H" | "L" | "S" | "W" | null;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeam"][];
        };
      };
    };
  };
  /** @description API endpoint that allows Destiny teams to be viewed or edited. */
  destinyteams_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DestinyTeamUpdate"];
        "application/x-www-form-urlencoded": components["schemas"]["DestinyTeamUpdate"];
        "multipart/form-data": components["schemas"]["DestinyTeamUpdate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["DestinyTeamUpdate"];
        };
      };
    };
  };
  /** @description API endpoint that allows Destiny teams to be viewed or edited. */
  destinyteams_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeam"];
        };
      };
    };
  };
  /** @description API endpoint that allows Destiny teams to be viewed or edited. */
  destinyteams_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DestinyTeamUpdate"];
        "application/x-www-form-urlencoded": components["schemas"]["DestinyTeamUpdate"];
        "multipart/form-data": components["schemas"]["DestinyTeamUpdate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeamUpdate"];
        };
      };
    };
  };
  /** @description API endpoint that allows Destiny teams to be viewed or edited. */
  destinyteams_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows Destiny teams to be viewed or edited. */
  destinyteams_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this destiny team. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedDestinyTeamUpdate"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedDestinyTeamUpdate"];
        "multipart/form-data": components["schemas"]["PatchedDestinyTeamUpdate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DestinyTeamUpdate"];
        };
      };
    };
  };
  /** @description API Endpoint that allows for Discord information to be viewed or edited. */
  discord_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DiscordUsernameRole"][];
        };
      };
    };
  };
  /** @description API Endpoint that allows for Discord information to be viewed or edited. */
  discord_destroy: {
    parameters: {
      path: {
        attendee__communications_platform_username: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"][];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupDetail"];
        "application/x-www-form-urlencoded": components["schemas"]["GroupDetail"];
        "multipart/form-data": components["schemas"]["GroupDetail"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupDetail"];
        "application/x-www-form-urlencoded": components["schemas"]["GroupDetail"];
        "multipart/form-data": components["schemas"]["GroupDetail"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows groups to be viewed or edited. */
  groups_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this group. */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedGroupDetail"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedGroupDetail"];
        "multipart/form-data": components["schemas"]["PatchedGroupDetail"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["GroupDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_list: {
    parameters: {
      query?: {
        /**
         * @description * `H` - Hardware Hack
         * * `M` - Meta
         * * `Q` - Snapdragon Spaces
         * * `X` - XREAL
         * * `S` - Snap Spectacles
         */
        relates_to_destiny_hardware?: "H" | "M" | "Q" | "S" | "X" | null;
        /** @description A search term. */
        search?: string;
        /**
         * @description * `AC` - Accessory
         * * `SE` - Sensor
         * * `VR` - Virtual Reality
         * * `AR` - Augmented Reality
         * * `MR` - Mixed Reality
         * * `CO` - Computer
         * * `HA` - Haptics
         * * `CA` - Camera
         * * `TA` - Tablet
         * * `HD` - Holographic Display
         */
        tags?: "AC" | "AR" | "CA" | "CO" | "HA" | "HD" | "MR" | "SE" | "TA" | "VR" | null;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Hardware"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareCreate"];
        "multipart/form-data": components["schemas"]["HardwareCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HardwareCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Hardware"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareCreate"];
        "multipart/form-data": components["schemas"]["HardwareCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware to be viewed or edited. */
  hardware_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardwareCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardwareCreate"];
        "multipart/form-data": components["schemas"]["PatchedHardwareCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_list: {
    parameters: {
      query?: {
        checked_out_to?: string;
        hardware?: string;
        /** @description A search term. */
        search?: string;
        serial?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDeviceHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDeviceHistory"];
        "multipart/form-data": components["schemas"]["HardwareDeviceHistory"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDeviceHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDeviceHistory"];
        "multipart/form-data": components["schemas"]["HardwareDeviceHistory"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware device historical records to be viewed. */
  hardwaredevicehistory_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical hardware device. */
        history_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardwareDeviceHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardwareDeviceHistory"];
        "multipart/form-data": components["schemas"]["PatchedHardwareDeviceHistory"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_list: {
    parameters: {
      query?: {
        checked_out_to?: string;
        hardware?: string;
        /**
         * @description * `H` - Hardware Hack
         * * `M` - Meta
         * * `Q` - Snapdragon Spaces
         * * `X` - XREAL
         * * `S` - Snap Spectacles
         */
        hardware__relates_to_destiny_hardware?: "H" | "M" | "Q" | "S" | "X" | null;
        /** @description A search term. */
        search?: string;
        serial?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDevice"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDevice"];
        "multipart/form-data": components["schemas"]["HardwareDevice"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDeviceDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareDevice"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareDevice"];
        "multipart/form-data": components["schemas"]["HardwareDevice"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwaredevices_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware device. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardwareDevice"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardwareDevice"];
        "multipart/form-data": components["schemas"]["PatchedHardwareDevice"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareDevice"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwarerequests_list: {
    parameters: {
      query?: {
        hardware?: string;
        requester__first_name?: string;
        requester__id?: string;
        requester__last_name?: string;
        /** @description A search term. */
        search?: string;
        team?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareRequestList"][];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwarerequests_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareRequestCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareRequestCreate"];
        "multipart/form-data": components["schemas"]["HardwareRequestCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HardwareRequestCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwarerequests_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware request. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareRequestDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwarerequests_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware request. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HardwareRequestList"];
        "application/x-www-form-urlencoded": components["schemas"]["HardwareRequestList"];
        "multipart/form-data": components["schemas"]["HardwareRequestList"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareRequestList"];
        };
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwarerequests_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware request. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows hardware devices to be viewed or edited. */
  hardwarerequests_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this hardware request. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedHardwareRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedHardwareRequest"];
        "multipart/form-data": components["schemas"]["PatchedHardwareRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HardwareRequest"];
        };
      };
    };
  };
  /** @description API endpoint that allows Reality Kits to be viewed or edited. */
  lighthouses_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LightHouse"][];
        };
      };
    };
  };
  /** @description API endpoint that allows Reality Kits to be viewed or edited. */
  lighthouses_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LightHouse"];
        "application/x-www-form-urlencoded": components["schemas"]["LightHouse"];
        "multipart/form-data": components["schemas"]["LightHouse"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["LightHouse"];
        };
      };
    };
  };
  /** @description API endpoint that allows Reality Kits to be viewed or edited. */
  lighthouses_retrieve: {
    parameters: {
      path: {
        table__number: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LightHouse"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"][];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Location"];
        "application/x-www-form-urlencoded": components["schemas"]["Location"];
        "multipart/form-data": components["schemas"]["Location"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Location"];
        "application/x-www-form-urlencoded": components["schemas"]["Location"];
        "multipart/form-data": components["schemas"]["Location"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows locations to be viewed or edited. */
  locations_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this location. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedLocation"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedLocation"];
        "multipart/form-data": components["schemas"]["PatchedLocation"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  /** @description API endpoint for getting detailed information about an authenticated user. */
  me_retrieve: {
    responses: {
      /** @description No response body */
      200: {
        content: never;
      };
    };
  };
  /** @description API endpoint for getting detailed information about an authenticated user. */
  me_partial_update: {
    responses: {
      /** @description No response body */
      200: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows mentor help requests to be viewed or edited. */
  mentorhelprequests_list: {
    parameters: {
      query?: {
        mentor?: string;
        reporter?: string;
        /** @description A search term. */
        search?: string;
        /**
         * @description * `R` - Requested
         * * `A` - Acknowledged
         * * `E` - En Route
         * * `F` - Resolved
         */
        status?: "A" | "E" | "F" | "R";
        team?: string;
        team__table__number?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequest"][];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests to be viewed or edited. */
  mentorhelprequests_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MentorHelpRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["MentorHelpRequest"];
        "multipart/form-data": components["schemas"]["MentorHelpRequest"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequest"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests to be viewed or edited. */
  mentorhelprequests_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this mentor help request. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequest"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests to be viewed or edited. */
  mentorhelprequests_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this mentor help request. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MentorHelpRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["MentorHelpRequest"];
        "multipart/form-data": components["schemas"]["MentorHelpRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequest"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests to be viewed or edited. */
  mentorhelprequests_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this mentor help request. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows mentor help requests to be viewed or edited. */
  mentorhelprequests_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this mentor help request. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedMentorHelpRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedMentorHelpRequest"];
        "multipart/form-data": components["schemas"]["PatchedMentorHelpRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequest"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests historical records to be viewed. */
  mentorhelprequestshistory_list: {
    parameters: {
      query?: {
        id?: string;
        mentor?: string;
        reporter?: string;
        /** @description A search term. */
        search?: string;
        /**
         * @description * `R` - Requested
         * * `A` - Acknowledged
         * * `E` - En Route
         * * `F` - Resolved
         */
        status?: "A" | "E" | "F" | "R";
        team?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequestHistory"][];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests historical records to be viewed. */
  mentorhelprequestshistory_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MentorHelpRequestHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["MentorHelpRequestHistory"];
        "multipart/form-data": components["schemas"]["MentorHelpRequestHistory"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequestHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests historical records to be viewed. */
  mentorhelprequestshistory_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical mentor help request. */
        history_id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequestHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests historical records to be viewed. */
  mentorhelprequestshistory_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical mentor help request. */
        history_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MentorHelpRequestHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["MentorHelpRequestHistory"];
        "multipart/form-data": components["schemas"]["MentorHelpRequestHistory"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequestHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows mentor help requests historical records to be viewed. */
  mentorhelprequestshistory_destroy: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical mentor help request. */
        history_id: number;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows mentor help requests historical records to be viewed. */
  mentorhelprequestshistory_partial_update: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this historical mentor help request. */
        history_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedMentorHelpRequestHistory"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedMentorHelpRequestHistory"];
        "multipart/form-data": components["schemas"]["PatchedMentorHelpRequestHistory"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MentorHelpRequestHistory"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
        team?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"][];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows projects to be viewed or edited. */
  projects_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this project. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedProject"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedProject"];
        "multipart/form-data": components["schemas"]["PatchedProject"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  rsvps_list: {
    parameters: {
      query?: {
        checked_in_at?: string;
        communications_platform_username?: string;
        email?: string;
        first_name?: string;
        last_name?: string;
        /**
         * @description * `P` - Participant
         * * `M` - Mentor
         * * `J` - Judge
         * * `S` - Sponsor
         * * `V` - Volunteer
         * * `O` - Organizer
         * * `G` - Guardian
         * * `E` - Media
         */
        participation_class?: "E" | "G" | "J" | "M" | "O" | "P" | "S" | "V";
        /**
         * @description * `A` - Digital Designer
         * * `D` - Developer
         * * `S` - Domain or other Specialized Skill Expert
         * * `P` - Project Manager
         */
        participation_role?: "A" | "D" | "P" | "S" | null;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeeRSVP"][];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  rsvps_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AttendeeRSVPCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["AttendeeRSVPCreate"];
        "multipart/form-data": components["schemas"]["AttendeeRSVPCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["AttendeeRSVPCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  rsvps_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeeRSVP"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  rsvps_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AttendeeRSVP"];
        "application/x-www-form-urlencoded": components["schemas"]["AttendeeRSVP"];
        "multipart/form-data": components["schemas"]["AttendeeRSVP"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeeRSVP"];
        };
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  rsvps_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows users to be viewed or edited. */
  rsvps_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this attendees. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAttendeeRSVP"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAttendeeRSVP"];
        "multipart/form-data": components["schemas"]["PatchedAttendeeRSVP"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AttendeeRSVP"];
        };
      };
    };
  };
  /**
   * @description OpenApi3 schema for this API. Format can be selected via content negotiation.
   *
   * - YAML: application/vnd.oai.openapi
   * - JSON: application/vnd.oai.openapi+json
   */
  schema_spectacular_retrieve: {
    parameters: {
      query?: {
        format?: "json" | "yaml";
        lang?: "af" | "ar" | "ar-dz" | "ast" | "az" | "be" | "bg" | "bn" | "br" | "bs" | "ca" | "ckb" | "cs" | "cy" | "da" | "de" | "dsb" | "el" | "en" | "en-au" | "en-gb" | "eo" | "es" | "es-ar" | "es-co" | "es-mx" | "es-ni" | "es-ve" | "et" | "eu" | "fa" | "fi" | "fr" | "fy" | "ga" | "gd" | "gl" | "he" | "hi" | "hr" | "hsb" | "hu" | "hy" | "ia" | "id" | "ig" | "io" | "is" | "it" | "ja" | "ka" | "kab" | "kk" | "km" | "kn" | "ko" | "ky" | "lb" | "lt" | "lv" | "mk" | "ml" | "mn" | "mr" | "ms" | "my" | "nb" | "ne" | "nl" | "nn" | "os" | "pa" | "pl" | "pt" | "pt-br" | "ro" | "ru" | "sk" | "sl" | "sq" | "sr" | "sr-latn" | "sv" | "sw" | "ta" | "te" | "tg" | "th" | "tk" | "tr" | "tt" | "udm" | "uk" | "ur" | "uz" | "vi" | "zh-hans" | "zh-hant";
      };
    };
    responses: {
      200: {
        content: {
          "application/vnd.oai.openapi": {
            [key: string]: unknown;
          };
          "application/yaml": {
            [key: string]: unknown;
          };
          "application/vnd.oai.openapi+json": {
            [key: string]: unknown;
          };
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiency"][];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillProficiencyCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["SkillProficiencyCreate"];
        "multipart/form-data": components["schemas"]["SkillProficiencyCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyDetail"];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillProficiency"];
        "application/x-www-form-urlencoded": components["schemas"]["SkillProficiency"];
        "multipart/form-data": components["schemas"]["SkillProficiency"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiency"];
        };
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows skill proficiencies to be viewed or edited. */
  skillproficiencies_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill proficiencies. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSkillProficiencyCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSkillProficiencyCreate"];
        "multipart/form-data": components["schemas"]["PatchedSkillProficiencyCreate"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SkillProficiencyCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"][];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Skill"];
        "application/x-www-form-urlencoded": components["schemas"]["Skill"];
        "multipart/form-data": components["schemas"]["Skill"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Skill"];
        "application/x-www-form-urlencoded": components["schemas"]["Skill"];
        "multipart/form-data": components["schemas"]["Skill"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows skills to be viewed or edited. */
  skills_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this skill. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSkill"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSkill"];
        "multipart/form-data": components["schemas"]["PatchedSkill"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Skill"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_list: {
    parameters: {
      query?: {
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"][];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TableCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["TableCreate"];
        "multipart/form-data": components["schemas"]["TableCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["TableCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Table"];
        "application/x-www-form-urlencoded": components["schemas"]["Table"];
        "multipart/form-data": components["schemas"]["Table"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"];
        };
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows tables to be viewed or edited. */
  tables_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this table. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedTable"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedTable"];
        "multipart/form-data": components["schemas"]["PatchedTable"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Table"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_list: {
    parameters: {
      query?: {
        attendees?: string[];
        name?: string;
        /** @description A search term. */
        search?: string;
        table?: string;
        table__number?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"][];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamCreate"];
        "application/x-www-form-urlencoded": components["schemas"]["TeamCreate"];
        "multipart/form-data": components["schemas"]["TeamCreate"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["TeamCreate"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Team"];
        "application/x-www-form-urlencoded": components["schemas"]["Team"];
        "multipart/form-data": components["schemas"]["Team"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows teams to be viewed or edited. */
  teams_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this team. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedTeam"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedTeam"];
        "multipart/form-data": components["schemas"]["PatchedTeam"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Team"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_list: {
    parameters: {
      query?: {
        claimed?: boolean;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"][];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FileUpload"];
        "application/x-www-form-urlencoded": components["schemas"]["FileUpload"];
        "multipart/form-data": components["schemas"]["FileUpload"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FileUpload"];
        "application/x-www-form-urlencoded": components["schemas"]["FileUpload"];
        "multipart/form-data": components["schemas"]["FileUpload"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows files to be viewed or edited. */
  uploaded_files_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this uploaded files. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedFileUpload"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedFileUpload"];
        "multipart/form-data": components["schemas"]["PatchedFileUpload"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FileUpload"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshop attendees to be viewed or edited. */
  workshopattendees_list: {
    parameters: {
      query?: {
        attendee?: string;
        /**
         * @description * `R` - RSVP'd
         * * `C` - Confirmed
         * * `I` - Instructor
         * * `V` - Volunteer
         */
        participation?: "C" | "I" | "R" | "V";
        /** @description A search term. */
        search?: string;
        workshop?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WorkshopAttendee"][];
        };
      };
    };
  };
  /** @description API endpoint that allows workshop attendees to be viewed or edited. */
  workshopattendees_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkshopAttendee"];
        "application/x-www-form-urlencoded": components["schemas"]["WorkshopAttendee"];
        "multipart/form-data": components["schemas"]["WorkshopAttendee"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["WorkshopAttendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshop attendees to be viewed or edited. */
  workshopattendees_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop attendee. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WorkshopAttendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshop attendees to be viewed or edited. */
  workshopattendees_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop attendee. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkshopAttendee"];
        "application/x-www-form-urlencoded": components["schemas"]["WorkshopAttendee"];
        "multipart/form-data": components["schemas"]["WorkshopAttendee"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WorkshopAttendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshop attendees to be viewed or edited. */
  workshopattendees_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop attendee. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows workshop attendees to be viewed or edited. */
  workshopattendees_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop attendee. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedWorkshopAttendee"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedWorkshopAttendee"];
        "multipart/form-data": components["schemas"]["PatchedWorkshopAttendee"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WorkshopAttendee"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshops to be viewed ot edited. */
  workshops_list: {
    parameters: {
      query?: {
        datetime?: string;
        hardware?: string[];
        location?: string;
        /**
         * @description * `A` - Digital Designer
         * * `D` - Developer
         * * `S` - Domain or other Specialized Skill Expert
         * * `P` - Project Manager
         */
        recommended_for?: "A" | "D" | "P" | "S" | null;
        /** @description A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Workshop"][];
        };
      };
    };
  };
  /** @description API endpoint that allows workshops to be viewed ot edited. */
  workshops_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Workshop"];
        "application/x-www-form-urlencoded": components["schemas"]["Workshop"];
        "multipart/form-data": components["schemas"]["Workshop"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Workshop"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshops to be viewed ot edited. */
  workshops_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Workshop"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshops to be viewed ot edited. */
  workshops_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Workshop"];
        "application/x-www-form-urlencoded": components["schemas"]["Workshop"];
        "multipart/form-data": components["schemas"]["Workshop"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Workshop"];
        };
      };
    };
  };
  /** @description API endpoint that allows workshops to be viewed ot edited. */
  workshops_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  /** @description API endpoint that allows workshops to be viewed ot edited. */
  workshops_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this workshop. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedWorkshop"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedWorkshop"];
        "multipart/form-data": components["schemas"]["PatchedWorkshop"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Workshop"];
        };
      };
    };
  };
}
